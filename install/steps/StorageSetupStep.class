<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

class StorageSetupStep extends InstallStep {
    function stepName() {
	return _('Storage Setup');
    }

    function loadTemplateData(&$templateData) {
	global $galleryStub;

	if (empty($this->_dir)) {
	    $this->_dir = $galleryStub->getConfig('data.gallery.base');
	    if (empty($this->_dir)) {
		$this->_dir =
		    dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR . 'g2data';
	    }
	}

	if (!empty($_POST['action']) && $_POST['action'] == 'save') {
	    if (empty($_POST['dir'])) {
		$templateData['error']['missing_value'] = 1;
	    } else {
		$dir = rtrim($this->sanitize($_POST['dir']));
		if (!is_dir($dir)) {
		    $templateData['error']['missing_dir'] = 1;
		} else if (!is_readable($dir)) {
		    $templateData['error']['inaccessible_dir'] = 1;
		} else if (!is_writable($dir)) {
		    $templateData['error']['readonly_dir'] = 1;
		} else {
		    /* Populate the dir */
		    if (!StorageSetupStep::populateDataDirectory($dir)) {
			$templateData['error']['creation_error'] = 1;
		    } else {
			$this->_dir = $dir;
			$this->setComplete(true);
		    }
		}
	    }
	    $templateData['dir'] = $dir;
	} else {
	    $templateData['dir'] = $this->_dir;
	}

	if ($this->isComplete()) {
	    $galleryStub->setConfig('data.gallery.base', $this->_dir);
	    $templateData['bodyFile'] = 'StorageSetupSuccess.html';
	} else {
	    $templateData['bodyFile'] = 'StorageSetupRequest.html';
	}

	if (strtolower(PHP_OS) == 'winnt') {
	    $templateData['OS'] = 'winnt';
	} else {
	    $templateData['OS'] = 'unix';
	}
    }

    function processRequest() {
	if (!empty($_GET['doAutoComplete'])) {
	    $path = !empty($_GET['path']) ? $_GET['path'] : '';
	    /* Undo the damage caused by magic_quotes */
	    if (get_magic_quotes_gpc()) {
		$path = stripslashes($path);
	    }

	    /* Find all matching paths */
	    header("Content-Type: text/plain");
 	    $dirs = $this->_getAllImmediateSubdirs($path);
 	    print join("\n", $dirs);
	    return false;
	}

	return true;
    }

    function _getAllImmediateSubdirs($path) {
	$dirList = array();
	if (!file_exists($path) || !is_dir($path)) {
	    return $dirList;
	}

	if ($dir = opendir($path)) {
	    while (($file = readdir($dir)) !== false) {
		if ($file == '.' || $file == '..') {
		    continue;
		}

		if ($path[strlen($path)-1] == DIRECTORY_SEPARATOR) {
		    $file = $path . $file;
		} else {
		    $file = sprintf('%s%s%s', $path, DIRECTORY_SEPARATOR, $file);
		}

		if (is_dir($file)) {
		    $dirList[] = $file;
		}
	    }
	    closedir($dir);
	}

	sort($dirList);
	return $dirList;
    }

    function populateDataDirectory($dataBase) {
	/* Use non-restrictive umask to create directories with lax permissions */
	umask(0);

	/* Create the sub directories, if necessary */
	foreach (array('albums',
		       'cache',
		       'locks',
		       'sessions',
		       'tmp',
		       'smarty',
		       'smarty/templates_c') as $key) {
	    $dir = "$dataBase/$key";

	    if (file_exists($dir) && !is_dir($dir)) {
		return false;
	    }

	    if (!file_exists($dir)) {
		if (!mkdir($dir, 0755)) {
		    return false;
		}
	    }

	    if (!is_writeable($dir)) {
		return false;
	    }

	    if ($key == 'locks') {
		for ($i = 0; $i <= 9; $i++) {
		    if (!file_exists("$dir/$i")) {
			if (!mkdir("$dir/$i", 0755)) {
			    return false;
			}
		    }

		    for ($j = 0; $j <= 9; $j++) {
			if (!file_exists("$dir/$i/$j")) {
			    if (!mkdir("$dir/$i/$j", 0755)) {
				return false;
			    }
			}
		    }
		}
	    }
	}

	return true;
    }

    function isRedoable() {
	return true;
    }
}
?>
