<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

class MultisiteStep extends InstallStep {
    var $_isMultisite;
    var $_configPath;

    function stepName() {
	return _('Multisite Setup');
    }

    function isRedoable() {
	return true;
    }

    function processRequest() {
	if (!empty($_GET['doAutoComplete'])) {
	    processAutoCompleteRequest();
	    return false;
	} else if (isset($_POST['isMultisite'])) {
	    $this->_configPath = rtrim($this->sanitize($_POST['configPath']),
				       ' ' . DIRECTORY_SEPARATOR);
	    if ($_POST['isMultisite'] == '0') {
		$this->_isMultisite = false;
		$baseDir = dirname(dirname(dirname(__FILE__)));
		$_SESSION['configPath'] = $baseDir;
		$this->setComplete(true);
		$this->readConfigFile();
		require_once($baseDir . '/modules/core/classes/GalleryUrlGenerator.class');
		$uri = preg_replace('{\?.*}', '', GalleryUrlGenerator::getCurrentRequestUri());
		header('Location: ' .
		    GalleryUrlGenerator::makeUrl($uri . '?step=' . ($this->getStepNumber() + 1)));
		return false;
	    }
	}
	return true;
    }

    function loadTemplateData(&$templateData) {
	if (!isset($this->_isMultisite)) {
	    $this->_isMultisite = false;
	    $this->_configPath = '';
	}

	if (isset($_POST['isMultisite']) && $_POST['isMultisite'] == '1') {
	    $this->_isMultisite = true;
	    if (empty($this->_configPath)) {
		$templateData['error']['missing_value'] = 1;
	    } else if (!is_dir($this->_configPath)) {
		$templateData['error']['missing_dir'] = 1;
	    } else if (!is_readable($this->_configPath)) {
		$templateData['error']['inaccessible_dir'] = 1;
	    } else if (!MultisiteStep::populateMultisiteDirectory($this->_configPath)) {
		$templateData['error']['creation_error'] = 1;
	    } else {
		$_SESSION['configPath'] = $this->_configPath;
		$this->setComplete(true);
		$this->readConfigFile();
	    }
	}

	$galleryDir = dirname(dirname(dirname(__FILE__)));
	if (isset($_SERVER['DOCUMENT_ROOT'])
		&& preg_match('#^' . $_SERVER['DOCUMENT_ROOT'] . '/(.*)#',
			      $galleryDir, $matches)) {
	    $galleryDir = $matches[1];
	}

	$templateData['isMultisite'] = $this->_isMultisite;
	$templateData['configPath'] = $this->_configPath;
	$templateData['galleryDir'] = $galleryDir;
	$templateData['bodyFile'] = $this->isComplete() ? 'MultisiteSuccess.html'
							: 'Multisite.html';
    }

    function populateMultisiteDirectory($dir) {
	umask(0022);
	$galleryDir = dirname(dirname(dirname(__FILE__))) . DIRECTORY_SEPARATOR;
	if (!$out = @fopen("$dir/main.php", 'w')) {
	    return false;
	}
	fwrite($out, "<?php\ndefine('GALLERY_CONFIG_DIR', dirname(__FILE__));\nrequire('" .
		     $galleryDir . "main.php');\n?>\n");
	fclose($out);
	if (!$out = @fopen("$dir/embed.php", 'w')) {
	    return false;
	}
	fwrite($out, "<?php\ndefine('GALLERY_CONFIG_DIR', dirname(__FILE__));\nrequire('" .
		     $galleryDir . "embed.php');\n?>\n");
	fclose($out);
	if (!$out = @fopen("$dir/index.php", 'w')) {
	    return false;
	}
	fwrite($out, "<?php\nrequire('" . $galleryDir . "index.php');\n?>\n");
	fclose($out);
	if (!is_dir("$dir/upgrade") && !mkdir("$dir/upgrade", 0755)) {
	    return false;
	}
	if (!$out = @fopen("$dir/upgrade/index.php", 'w')) {
	    return false;
	}
	fwrite($out, "<?php\ndefine('GALLERY_CONFIG_DIR', dirname(dirname(__FILE__)));\nrequire('" .
		     $galleryDir . 'upgrade' . DIRECTORY_SEPARATOR . "index.php');\n?>\n");
	fclose($out);
	return true;
    }

    function readConfigFile() {
	/* Load existing config.php (if found), which requires $gallery to be valid */
	$configFile = $_SESSION['configPath'] . DIRECTORY_SEPARATOR . 'config.php';
	$gallery = new GalleryStub();
	if (is_file($configFile) && is_readable($configFile)) {
	    ob_start();
	    @include($configFile);
	    ob_end_clean();
	}
	global $galleryStub;
	$galleryStub = $gallery;
    }
}
?>
