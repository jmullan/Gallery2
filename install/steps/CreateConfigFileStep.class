<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

class CreateConfigFileStep extends InstallStep {
    var $_firstTime;

    function CreateConfigFileStep() {
	$this->_firstTime = true;
    }

    function stepName() {
	return _('Create Config File');
    }

    function loadTemplateData(&$templateData) {
	global $galleryStub;

	$configDir = $_SESSION['configPath'];
	$configFilePath = $configDir . '/config.php';
	if (file_exists($configFilePath) && !is_writeable($configFilePath)) {
	    /* The file exists but we can't write to it */
	    $templateData['error'] = sprintf(_('Unable to write to the <b>config.php</b> configuration file in your <tt>%s</tt> directory.  Please change its permissions.  If you\'re on Unix you can do <i>chmod 666 config.php</i> to fix this.'), basename($configDir));
	    $this->setInError(true);
	    $templateData['bodyFile'] = 'CreateConfigFileInstructions.html';
	    $templateData['galleryDir'] = basename($configDir);
	} else {
	    if (!$out = @fopen($configFilePath, 'w')) {
		/* Give the user instructions */
		$templateData['bodyFile'] = 'CreateConfigFileInstructions.html';
		$templateData['galleryDir'] = basename($configDir);

		if (!$this->_firstTime) {
		    if (!file_exists($configFilePath)) {
			$templateData['error'] = sprintf(
			    _('The config.php file does not exist in your %s directory'),
			    $configDir);
		    } else {
			$templateData['error'] = sprintf(
			    _('The config.php file exists but is not writeable.  If your server is Windows, you may have to disable file sharing for config.php and set its permissions manually.'),
			    $configDir);
		    }
		}
	    } else {
		$this->_writeConfig($out, $configDir);
		fclose($out);
		$this->setComplete(true);
		$templateData['bodyFile'] = 'CreateConfigFileSuccess.html';
	    }
	}
	$this->_firstTime = false;
    }

    function _writeConfig(&$out, $configDir) {
	global $galleryStub;
	$baseDir = dirname(dirname(dirname(__FILE__)));
	require_once($baseDir . '/modules/core/classes/GalleryUrlGenerator.class');
	$baseUrl = GalleryUrlGenerator::makeUrl(preg_replace('{install/index.php\?.*}', '',
						GalleryUrlGenerator::getCurrentRequestUri()));

	$addslashes = array('\\' => '\\\\', "'" => "\\'");
	$newStoreConfig = $galleryStub->getConfig('storage.config');
	$in = @fopen($baseDir . '/install/config.php-template', 'r');
	while ($line = fgets($in, 2000)) {
	    if (trim($line) == '$gallery->setConfig(\'setup.password\', \'\');') {
		$tmp = strtr($galleryStub->getConfig('setup.password'), $addslashes);
		$line = sprintf("\$gallery->setConfig('setup.password', '%s');\n", $tmp);
	    }

	    if (trim($line) == '$gallery->setConfig(\'data.gallery.base\', \'\');') {
		$tmp = strtr($galleryStub->getConfig('data.gallery.base'), $addslashes);
		$line = sprintf("\$gallery->setConfig('data.gallery.base', '%s');\n", $tmp);
	    }

	    if (trim($line) == '$gallery->setConfig(\'cookieId\', \'\');') {
		/* Generate new cookieId */
		list($usec, $sec) = explode(" ", microtime());
		/* Note: srand() is required for php versions < 4.2  */
		srand(100000 * ((float)$usec + (float)$sec));
		$galleryStub->setConfig('cookieId', substr(md5(rand()), 0, 6));
		$tmp = $galleryStub->getConfig('cookieId');
		$line = sprintf("\$gallery->setConfig('cookieId', '%s');\n", $tmp);
	    }

	    foreach (array('type', 'hostname', 'database', 'username',
			   'password', 'tablePrefix', 'columnPrefix') as $key) {
		if (preg_match("/^.storeConfig\['$key'\] = '.*';/", $line)) {
		    $newStoreConfig[$key] = strtr($newStoreConfig[$key], $addslashes);
		    $line = "\$storeConfig['$key'] = '$newStoreConfig[$key]';\n";
		}
	    }

	    if (trim($line) == '$gallery->setConfig(\'galleryBaseUrl\', \'\');' &&
		    $configDir != $baseDir) {
		/* galleryBaseUrl not required for config.php in codebase dir */
		$tmp = strtr($baseUrl, $addslashes);
		$line = sprintf("\$gallery->setConfig('galleryBaseUrl', '%s');\n", $tmp);
	    }

	    fwrite($out, $line);
	}
	fclose($in);
    }
}
?>
