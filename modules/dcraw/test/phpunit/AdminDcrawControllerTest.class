<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * AdminDcraw controller tests
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class AdminDcrawControllerTest extends GalleryControllerTestCase {

    function AdminDcrawControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'dcraw.AdminDcraw');
    }

    function setUp() {
	global $gallery;
	
	parent::setUp();

	$ret = $this->_markPluginParametersForCleanup('module', 'dcraw');
	if ($ret->isError()) {
	    print $ret->getAsHtml();
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$this->_platform = new UnitTestPlatform();
	$gallery->setPlatform($this->_platform);
    }

    function tearDown() {
	$this->assert($this->_platform->isComplete(), $this->_platform->getRemaining());	
	parent::tearDown();
    }

    function testSaveV6() {
	GalleryUtilities::putRequestVariable('form[path]', '/path/to/dcraw');
	GalleryUtilities::putRequestVariable('form[action][save]', 1);

	$this->_platform->setReply('isRestrictedByOpenBaseDir', array('/path/to/dcraw'), 0);
	$this->_platform->setReply('is_file', array('/path/to/dcraw'), 1);
	$this->_platform->setReply(
	    'exec',
	    array(array(array('/path/to/dcraw'))),
	    array(1, array(), array('Raw Photo Decoder "dcraw" v6.35')));

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'dcraw.AdminDcraw'),
				  'error' => array(),
				  'status' => array('saved' => 1)),
			    $results);
    }

    function testSaveV7() {
	GalleryUtilities::putRequestVariable('form[path]', '/path/to/dcraw');
	GalleryUtilities::putRequestVariable('form[action][save]', 1);

	$this->_platform->setReply('isRestrictedByOpenBaseDir', array('/path/to/dcraw'), 0);
	$this->_platform->setReply('is_file', array('/path/to/dcraw'), 1);
	$this->_platform->setReply(
	    'exec',
	    array(array(array('/path/to/dcraw'))),
	    array(1, array(), array('Raw Photo Decoder "dcraw" v7.17')));

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'dcraw.AdminDcraw'),
				  'error' => array(),
				  'status' => array('saved' => 1)),
			    $results);
    }

    function testSaveMissingPath() {
	GalleryUtilities::putRequestVariable('form[action][save]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'dcraw.AdminDcraw'),
				  'error' => array('form[error][path][missing]'),
				  'status' => array()),
			    $results);
    }

    function testSaveBadPath() {
	GalleryUtilities::putRequestVariable('form[path]', '/bad/path');
	GalleryUtilities::putRequestVariable('form[action][save]', 1);

	$this->_platform->setReply('isRestrictedByOpenBaseDir', array('/bad/path'), 0);
	$this->_platform->setReply('is_file', array('/bad/path'), 0);

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'dcraw.AdminDcraw'),
				  'error' => array('form[error][path][badPath]'),
				  'status' => array()),
			    $results);
    }

    function testSaveFailedTests() {
	GalleryUtilities::putRequestVariable('form[path]', '/path/to/dcraw');
	GalleryUtilities::putRequestVariable('form[action][save]', 1);

	$this->_platform->setReply('isRestrictedByOpenBaseDir', array('/path/to/dcraw'), 0);
	$this->_platform->setReply('is_file', array('/path/to/dcraw'), 1);
	$this->_platform->setReply(
	    'exec',
	    array(array(array('/path/to/dcraw'))),
	    array(1, array(), array('Wrong version of dcraw')));

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'dcraw.AdminDcraw'),
				  'error' => array('form[error][path][testError]'),
				  'status' => array()),
			    $results);
    }

    function testReset() {
	GalleryUtilities::putRequestVariable('form[action][reset]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'dcraw.AdminDcraw'),
				  'error' => array(),
				  'status' => array()),
			    $results);
    }

    function testCancel() {
	GalleryUtilities::putRequestVariable('form[action][cancel]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array(
				      'view' => 'core.SiteAdmin',
				      'subView' => 'core.AdminModules'),
				  'error' => array(),
				  'status' => array()),
			    $results);
    }
}
?>
