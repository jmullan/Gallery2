<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2004 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package Thumbnail
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * Load required classes
 */
require_once(dirname(__FILE__) . '/../../core/classes/GalleryToolkit.class');

/**
 * A version of GalleryToolkit to supply default thumbnail images for
 * non-image mime types.
 *
 * @package Thumbnail
 * @subpackage Classes
 */
class ThumbnailToolkit extends GalleryToolkit {

    /**
     * @see GalleryToolkit::getProperty()
     */
    function getProperty($mimeType, $propertyName, $sourceFilename) {
	return array(GalleryStatus::error(ERROR_UNIMPLEMENTED, __FILE__, __LINE__), null);
    }

    /**
     * @see GalleryToolkit::performOperation()
     */
    function performOperation($mimeType, $operationName, $sourceFilename,
			      $destFilename, $parameters) {
	require_once(dirname(__FILE__) . '/ThumbnailHelper.class');
	global $gallery;
	$platform = $gallery->getPlatform();

	list ($ret, $mimeTypeMap) = ThumbnailHelper::fetchMimeTypeMap();
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	if (!isset($mimeTypeMap[$mimeType]) || $operationName != 'convert-to-image/jpeg') {
	    return array(GalleryStatus::error(ERROR_UNSUPPORTED_OPERATION, __FILE, __LINE__), null);
	}
	list ($ret, $thumbImage) = GalleryCoreApi::loadEntitiesById($mimeTypeMap[$mimeType]);
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	list ($ret, $thumbPath) = $thumbImage->fetchPath();
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$outputMimeType = 'image/jpeg';
	$success = $platform->copy($thumbPath, $destFilename);
	if (!$success) {
	    return array(GalleryStatus::error(ERROR_PLATFORM_FAILURE, __FILE__, __LINE__,
					      "Failed copying $thumbPath -> $destFilename"), null);
	}

	return array(GalleryStatus::success(), $outputMimeType);
    }
}
?>
