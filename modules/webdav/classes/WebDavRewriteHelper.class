<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * A WebDAV helper class for generating short URLs without query strings.
 * @package WebDav
 * @subpackage Classes
 * @author Jack Bates <ms419@freezone.co.uk>
 * @version $Revision$
 * @static
 */
class WebDavRewriteHelper {

    /**
     * Version of GalleryFileSystemEntity::fetchLogicalPath which uses WebDAV path components.  The
     * path returned is already URL encoded because WebDAV paths may contain special characters, in
     * which case it's impossible to distinguish '/' in path components from the path separator.
     * @param object GalleryItem $item
     * @return array object GalleryStatus a status code
     *               string logical path
     * @see GalleryFileSystemEntity::fetchLogicalPath
     */
    function fetchLogicalPath($item) {
	if (!GalleryUtilities::isA($item, 'GalleryFileSystemEntity')) {
	    return array(GalleryCoreApi::error(ERROR_BAD_PARAMETER), null);
	}

	list ($ret, $parentItems) = GalleryCoreApi::fetchParents($item);
	if ($ret) {
	    return array($ret, null);
	}

	/* Ignore the root item */
	array_shift($parentItems);

	/* Append the given item */
	array_push($parentItems, $item);

	$path = '';
	foreach ($parentItems as $parentItem) {
	    /* Check if the item has a WebDAV path component */
	    list ($ret, $pathComponent) = GalleryCoreApi::getPluginParameter(
		'module', 'webdav', 'pathComponent', $parentItem->getId());
	    if ($ret) {
		return array($ret, null);
	    }

	    /* Otherwise use the regular path component */
	    if (empty($pathComponent)) {
		$pathComponent = $parentItem->getPathComponent();
	    }

	    /* Use rawurlencode to encode ' ' as '%20' instead of '+' */
	    $path .= '/' . rawurlencode($pathComponent);
	}

	/* Append trailing '/' */
	if ($item->isContainer()) {
	    $path .= '/';
	}

	return array(null, $path);
    }

    /**
     * Version of RewriteSimpleHelper::parserPath to support:
     * o either 'path' or 'itemId' params
     * o empty path or '/' for root album URL
     * o patterns starting with the '%path%' keyword
     * o patterns with or without a path separator before the '%path%' keyword
     * o WebDAV path components with special characters
     * @see RewriteSimpleHelper::parsePath
     */
    function parsePath(&$url, &$params, &$entity) {
	global $gallery;

	if (isset($params['itemId'])) {
	    if (!isset($entity)) {
		$urlGenerator =& $gallery->getUrlGenerator();
		$entity = $urlGenerator->loadEntity($params['itemId']);
	    }

	    list ($ret, $params['path']) = WebDavRewriteHelper::fetchLogicalPath($entity);
	    if ($ret) {
		if ($gallery->getDebug()) {
		    $gallery->debug(
			'Error in WebDavRewriteHelper::parsePath: ' .  $ret->getAsText());
		}
		return false;
	    }

	    unset($params['itemId']);
	}

	if (empty($params['path'])) {
	    $params['path'] = '';
	}


	/* First check if the URL starts with %path% to avoid replacing it with a leading slash */
	$url = preg_replace('/^%path%/', ltrim($params['path'], '/'), $url);

	/*
	 * Windows makes PROPFIND requests without trailing slashes, so the URL rewrite rule must
	 * support requests without trailing slashes.  Match here patterns with and without a path
	 * separator. */
	$url = preg_replace('/(\/)*%path%/', '/' . ltrim($params['path'], '/'), $url);
	unset($params['path']);

	return true;
    }
}
?>
