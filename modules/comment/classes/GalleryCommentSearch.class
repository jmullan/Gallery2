<?php
/*
 * $RCSfile
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2003 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * This is an implementation of the search module's SearchInterface_1_0
 */
class GalleryCommentSearch extends GallerySearchInterface_1_0 {

    /**
     * @see GallerySearchInterface_1_0.getSearchModuleInfo()
     */
    function getSearchModuleInfo() {
	global $gallery;

	list ($ret, $module) = $gallery->loadModule('comment');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$info = array('name' => $module->translate('Comments'),
		      'description' => $module->translate('Comment Module'),
		      'options' => array('comments' => array('description' => $module->translate('Search comments'),
							     'enabled' => 1)));
	return array(GalleryStatus::success(), $info);
    }

    /**
     * @see GallerySearchInterface_1_0.search()
     */
    function search($options, $criteria, $offset=0, $count=-1) {
	global $gallery;

	/* Get our separate permission bit settings */
	list ($ret, $coreBits) =
	    GalleryPermissionSetMap::convertIdsToBits('core.view');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	list ($ret, $commentBits) =
	    GalleryPermissionSetMap::convertIdsToBits('comment.view');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$countQuery = '
	SELECT
	  COUNT(DISTINCT([GalleryChildEntity::parentId])),
	  BIT_OR([GalleryPermissionMap::permission])
	FROM
	  [GalleryChildEntity], [GalleryComment], [GalleryPermissionMap], [GalleryUserGroupMap]
	WHERE
	  [GalleryChildEntity::id] = [GalleryComment::id]
	  AND
          [GalleryChildEntity::parentId] = [GalleryPermissionMap::itemId]
          AND
          ([GalleryPermissionMap::userId] = ?
           OR
           ([GalleryUserGroupMap::userId] = ?
            AND
            [GalleryPermissionMap::groupId] = [GalleryUserGroupMap::groupId]))
          AND
          [GalleryComment::comment] LIKE ?
	HAVING
	  (BIT_OR([GalleryPermissionMap::permission]) & ? > ?)
          AND
	  (BIT_OR([GalleryPermissionMap::permission]) & ? > ?)
        ';

	$query = '
	SELECT
	  DISTINCT([GalleryChildEntity::parentId]),
	  BIT_OR([GalleryPermissionMap::permission]),
          [GalleryComment::date]
	FROM
	  [GalleryChildEntity], [GalleryComment], [GalleryPermissionMap], [GalleryUserGroupMap]
	WHERE
	  [GalleryChildEntity::id] = [GalleryComment::id]
	  AND
          [GalleryChildEntity::parentId] = [GalleryPermissionMap::itemId]
          AND
          ([GalleryPermissionMap::userId] = ?
           OR
           ([GalleryUserGroupMap::userId] = ?
            AND
            [GalleryPermissionMap::groupId] = [GalleryUserGroupMap::groupId]))
          AND
          [GalleryComment::comment] LIKE ?
	GROUP BY
	  [GalleryChildEntity::parentId],
          [GalleryComment::date]
	HAVING
	  (BIT_OR([GalleryPermissionMap::permission]) & ? > ?)
          AND
	  (BIT_OR([GalleryPermissionMap::permission]) & ? > ?)
	ORDER BY
	  [GalleryComment::date] DESC
        ';

	$storage = $gallery->getStorage();
	$data = array();
	$data[] = $gallery->getActiveUserId();
	$data[] = $gallery->getActiveUserId();
	$data[] = $criteria;
	$data[] = $storage->convertIntToBits($coreBits);
	$data[] = $storage->convertIntToBits(0);
	$data[] = $storage->convertIntToBits($commentBits);
	$data[] = $storage->convertIntToBits(0);
	
	/* Find the total */
	list ($ret, $results) = $gallery->search($countQuery, $data);
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	$result = $results->nextResult();
	$numRows = $result[0];
	
	list ($ret, $results) =
	    $gallery->search($query,
			     $data,
			     array('limit' => array('offset' => $offset,
						    'count' => $count)));
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$itemIds = array();
	while ($result = $results->nextResult()) {
	    $itemIds[] = $result[0];
	}

	$data = array('start' => $offset+1,
		      'end' => $offset + sizeof($itemIds),
		      'count' => $numRows,
		      'ids' => $itemIds);
	return array(GalleryStatus::success(), $data);
    }
}
