<?php
/*
 * $RCSfile: RatingOptionTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2006 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.2 $ $Date: 2006/01/10 04:41:54 $
 * @package Rating
 * @subpackage PHPUnit
 * @author Don Seiler <don@seiler.us>
 */

GalleryCoreApi::requireOnce('lib/tools/phpunit/ItemEditOptionTestCase.class');

/**
 * Tests RatingItemEdit and enabling of rating for albums.
 * @package Rating
 * @subpackage PHPUnit
 */
class RatingOptionTest extends ItemEditOptionTestCase {

    function RatingOptionTest($methodName) {
	$this->ItemEditOptionTestCase($methodName, 'rating', 'RatingItemEdit');
    }

    function setUp() {
	parent::setUp();

	list ($ret, $this->_album) = $this->_createRandomAlbum($this->_getRootId());
	if ($ret) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->_markForCleanup($this->_album);

	$ret = $this->_markPluginParametersForCleanup('module', 'rating');
	if ($ret) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
    }

    function testEnableRatingForAlbum() {
	$ret = GalleryCoreApi::setPluginParameter('module', 'rating', 'enabled', 0,
		$this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}

	$form['action']['save'] = 'Save';
	$form['rating']['enabled'] = 'on';
	$result = $this->_handleRequestAfterEdit($form, $this->_album);
	$this->assertEquals(array(array(), array()), $result, 'Save failed.');

	list ($ret, $enabled) = GalleryCoreApi::getPluginParameter('module', 'rating', 'enabled',
		$this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals(1, (int)$enabled, 'Rating not enabled.');
    }

    function testDisableRatingForAlbum() {
	$ret = GalleryCoreApi::setPluginParameter('module', 'rating', 'enabled', 1,
		$this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}

	$form['action']['save'] = 'Save';
	$result = $this->_handleRequestAfterEdit($form, $this->_album);
	$this->assertEquals(array(array(), array()), $result, 'Save failed.');

	list ($ret, $enabled) = GalleryCoreApi::getPluginParameter('module', 'rating', 'enabled',
		$this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals(0, (int)$enabled, 'Rating enabled.');
    }
    
    function testEnableInDescendents() {
	$ret = GalleryCoreApi::setPluginParameter('module', 'rating', 'enabled', 0,
		$this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$form['rating']['enabled'] = 1;
	$form['changeInDescendents']['rating'] = 1;
        
	list ($ret, $this->_childAlbum) = $this->_createRandomAlbum($this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$ret = GalleryCoreApi::setPluginParameter('module', 'rating', 'enabled', 0,
		$this->_childAlbum->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
        
	list ($error, $warning) = $this->_handleRequestAfterEdit($form, $this->_album);
	$this->assertEquals(array(), $error);
	$this->assertEquals(array(), $warning);
        
	list ($ret, $enabled) = GalleryCoreApi::getPluginParameter(
	    'module', 'rating', 'enabled', $this->_album->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals(1, (int)$enabled, 'Parent album');
        
	list ($ret, $enabled) = GalleryCoreApi::getPluginParameter(
	    'module', 'rating', 'enabled', $this->_childAlbum->getId());
	if ($ret) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals(1, (int)$enabled, 'Child album');        
    }
}
?>
