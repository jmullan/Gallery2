<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2004 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package ImageFrame
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * @package ImageFrame
 * @subpackage UserInterface
 */
class SampleView extends GalleryView {

    /**
     * @see GalleryView::loadTemplate
     */
    function loadTemplate(&$template, &$form) {
	list ($ret, $imageframe) =
	    GalleryCoreApi::newFactoryInstance('ImageFrameInterface_1_0');
	if ($ret->isError() || !isset($imageframe)) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	list ($ret, $list) = $imageframe->getImageFrameList();
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	$frame = array();
	list ($ret, $frame['template'], $frame['style'], $frame['data']) =
	    $imageframe->getImageFrameData(array_keys($list));
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$ImageFrameSample = array();
	$itemId = GalleryUtilities::getRequestVariables('itemId');
	if (!empty($itemId)) {
	    list ($ret, $item) = GalleryCoreApi::loadEntitiesById($itemId);
	    if ($ret->isError()) {
		return array($ret->wrap(__FILE__, __LINE__), null);
	    }
	    list ($ret, $thumbnail) = GalleryCoreApi::fetchThumbnailsByItemIds(array($itemId));
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	    if (isset($thumbnail[$itemId])) {
		$ImageFrameSample['item'] = $item->getMemberData();
		$ImageFrameSample['thumb'] = $thumbnail[$itemId]->getMemberData();
	    }
	}

	$ImageFrameSample['list'] = $list;
	$ImageFrameSample['frame'] = $frame;
	$ImageFrameSample['sample'] = GalleryUtilities::convertPathToUrl(dirname(__FILE__)) . '/images/sample.jpg';

	$template->setVariable('ImageFrameSample', $ImageFrameSample);
	return array(GalleryStatus::success(),
	    array('head' => 'modules/imageframe/templates/SampleHead.tpl',
		  'body' => 'modules/imageframe/templates/SampleBody.tpl'));
    }
}
?>
