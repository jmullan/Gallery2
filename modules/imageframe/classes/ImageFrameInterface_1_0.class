<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2004 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package ImageFrame
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * This is an interface for the ImageFrame module.  Layouts or modules that
 * wish to display a frame around a photo can utilize an implementation of
 * this interface.
 *
 * @package ImageFrame
 * @subpackage Classes
 */
class ImageFrameInterface_1_0 {

    /**
     * Get list of available image frames
     *
     * @return array(object GalleryStatus a status code,
     *               array(frame_id=>localized_frame_name) )
     */
    function getImageFrameList() {
	return array(GalleryStatus::error(ERROR_UNIMPLEMENTED, __FILE__, __LINE__),
		     null);
    }

    /**
     * Get data required for rendering image frames.
     * Pass in list of ids that may be used in a view.  Include the style
     * template in the header and then include the image frame template where
     * needed, passing the frame data, the frame to render and all required
     * image parameters, either item/image or src.
     * See example in SampleHead.tpl/SampleBody.tpl
     *
     * @param array of frame ids to prepare for use or single frame id
     * @return array(object GalleryStatus a status code,
     *               string image frame template path,
     *               string style template path,
     *               array of ImageFrame data for requested frames )
     */
    function getImageFrameData($frameIds) {
	return array(GalleryStatus::error(ERROR_UNIMPLEMENTED, __FILE__, __LINE__),
		     null, null, null);
    }

    /**
     * Get url for displaying samples of all image frames.
     * Pass an itemId to the view to use the thumbnail of that item in
     * the samples; otherwise a default image will be used.
     *
     * @return array(object GalleryStatus a status code,
     *               string view name)
     */
    function getSampleUrl($itemId=null) {
	return array(GalleryStatus::error(ERROR_UNIMPLEMENTED, __FILE__, __LINE__),
		     null);
    }
}
