<?php
/*
 * $RCSfile: SetupRewriteControllerTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.10 $ $Date: 2005/08/23 03:49:53 $
 * @package Rewrite
 * @subpackage PHPUnit
 * @author Douglas Cau <douglas@cau.se>
 */

/**
 * SetupRewrite controller tests
 *
 * @package Rewrite
 * @subpackage PHPUnit
 *
 */
class SetupRewriteControllerTest extends GalleryControllerTestCase {
    function SetupRewriteControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'rewrite.SetupRewrite');
    }

    function setUp() {
	global $gallery;
	parent::setUp();

	$ret = $this->_markPluginParametersForCleanup('module', 'rewrite');
	if ($ret->isError()) {
		print $ret->getAsHtml();
		return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}

	$this->_platform = new SetupRewriteControllerTestPlatform();
	$gallery->setPlatform($this->_platform);
    }

    function testDone() {
	GalleryUtilities::putRequestVariable('form[action][done]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'core.AdminModules'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testTest() {
	GalleryUtilities::putRequestVariable('form[action][test]', 1);

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'rewrite.SetupRewrite'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testForce1() {
	GalleryUtilities::putRequestVariable('form[action][force]', 1);
	GalleryUtilities::putRequestVariable('form[force][test1]', 'on');

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'rewrite.SetupRewrite'),
				  'status' => array(),
				  'error' => array()),
			    $results, 'request');

	list ($ret, $status) = GalleryCoreApi::getPluginParameter('module', 'rewrite', 'status');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	$status = unserialize($status);

	$this->assertEquals(array('needOptions' => false, 'forced' => 1),
			    $status, 'status');
    }

    function testForce2() {
	GalleryUtilities::putRequestVariable('form[action][force]', 1);
	GalleryUtilities::putRequestVariable('form[force][test2]', 'on');

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'rewrite.SetupRewrite'),
				  'status' => array(),
				  'error' => array()),
			    $results, 'request');

	list ($ret, $status) = GalleryCoreApi::getPluginParameter('module', 'rewrite', 'status');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	$status = unserialize($status);

	$this->assertEquals(array('needOptions' => true, 'forced' => 1),
			    $status, 'status');
    }
}

/**
 * Test platform for this test
 *
 * @package Rewrite
 * @subpackage PHPUnit
 */
class SetupRewriteControllerTestPlatform extends GalleryPlatform{
    function is_dir($name) {
	if ($name == '/var/www/localhost/htdocs/gallery2') {
	    return true;
	}

	return parent::is_dir($name);
    }
}

?>
