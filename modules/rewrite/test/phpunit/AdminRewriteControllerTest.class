<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2004 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package Rewrite
 * @subpackage PHPUnit
 * @author Douglas Cau <douglas@cau.se>
 */

/**
 * AdminRewrite controller tests
 *
 * @package Rewrite
 * @subpackage PHPUnit
 *
 */
class AdminRewriteControllerTest extends GalleryControllerTestCase {
    function AdminRewriteControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'rewrite:AdminRewrite');
    }

    function setUp() {
	global $gallery;
	parent::setUp();

	foreach (array('prefixMap') as $param) {
	    list ($ret, $this->_saveParameters[$param]) =
		    GalleryCoreApi::getPluginParameter('module', 'rewrite', $param);
	    if ($ret->isError()) {
		print $ret->getAsHtml();
		return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	    }
	}
    }

    function tearDown() {
	global $gallery;
	parent::tearDown();

    	foreach ($this->_saveParameters as $key => $value) {
	    $ret = GalleryCoreApi::setPluginParameter('module', 'rewrite', $key,
		    $value);
	    if ($ret->isError()) {
		print $ret->getAsHtml();
		return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	    }
	}
    }
    
    function testCancelRedirect() {
	GalleryUtilities::putRequestVariable('form[action][cancel]', 1);
	
	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core:SiteAdmin',
						      'subView' => 'rewrite:AdminRewrite'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }
    
    function testResetPrefixes() {
	GalleryUtilities::putRequestVariable('form[action][reset]', 1);
	
	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core:SiteAdmin',
						      'subView' => 'rewrite:AdminRewrite'),
				  'status' => array('saved' => 1),
				  'error' => array()),
			    $results);
			    
	$results = RewriteHelper::getPrefixMap();
	$this->assertEquals(array(),
			    $results[1]);
    }
    
    function testSaveValidPrefixes() {
	GalleryUtilities::putRequestVariable('form[action][save]', 1);
	GalleryUtilities::putRequestVariable('form[prefix]', array(
		'core:ShowItem' => 'test_show', 'core:DownloadItem' => 'test_download'));

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core:SiteAdmin',
						      'subView' => 'rewrite:AdminRewrite'),
				  'status' => array('saved' => 1),
				  'error' => array()),
			    $results);

	$results = RewriteHelper::getPrefixMap();
	$this->assertEquals(array('core:ShowItem' => 'test_show',
				  'core:DownloadItem' => 'test_download'),
			    $results[1]);
    }
    
    function testSaveEmptyPrefixes() {
	GalleryUtilities::putRequestVariable('form[action][save]', 1);
	GalleryUtilities::putRequestVariable('form[prefix]', array(
		'core:ShowItem' => '', 'core:DownloadItem' => ''));

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core:SiteAdmin',
						      'subView' => 'rewrite:AdminRewrite'),
				  'status' => array('saved' => 1),
				  'error' => array()),
			    $results);

	$this->assertEquals(array(GalleryStatus::success(), array()),
			    RewriteHelper::getPrefixMap());
    }
    
    function testSaveBadPrefixes1() {
	GalleryUtilities::putRequestVariable('form[action][save]', 1);
	GalleryUtilities::putRequestVariable('form[prefix]',
		array('core:ShowItem' => 'modules'));
		
	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'core:SiteAdmin',
						      'subView' => 'rewrite:AdminRewrite'),
				  'status' => array(),
				  'error' => array('form[error][badPrefix]')),
			    $results);
    }
    
    function testSaveBadPrefixes2() {
	GalleryUtilities::putRequestVariable('form[action][save]', 1);
	GalleryUtilities::putRequestVariable('form[prefix]',
		array('core:ShowItem' => 'test', 'core:DownloadItem' => 'test'));
		
	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'core:SiteAdmin',
						      'subView' => 'rewrite:AdminRewrite'),
				  'status' => array(),
				  'error' => array('form[error][badPrefix]')),
			    $results);
    }
}