<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

GalleryCoreApi::requireOnce('modules/rewrite/classes/RewriteUrlGenerator.class');

/**
 * URL Generator for Apache mod_rewrite parser.
 *
 * @package Rewrite
 * @subpackage Parsers
 * @author Douglas Cau <douglas@cau.se>
 * @version $Revision$
 */
class ModRewriteUrlGenerator extends RewriteUrlGenerator {

    /**
     * @see GalleryUrlGenerator::initNavigation
     */
    function initNavigation() {
	$ret = $this->_onLoad();
	if ($ret) {
	    return $ret;
	}

	$ret = parent::initNavigation();
	if ($ret) {
	    return $ret;
	}

	return null;
    }

    /**
     * @see GalleryUrlGenerator::getCurrentUrl
     * REQUEST_URI doesn't get rewritten by mod_rewrite
     */
    function getCurrentUrl($forceDirect=false) {
	if ($this->_error) {
	    return parent::getCurrentUrl($forceDirect);
	}

	if (!isset($this->_currentUrl[$forceDirect])) {
	    /* Let the provided path override the database stored value */
	    if (!empty($this->_path[$forceDirect])) {
		$path = $this->_path[$forceDirect];
	    } else {
		/* Get the configured value, if set */
		$location = GalleryUtilities::isEmbedded() ? 'embeddedLocation' : 'galleryLocation';
		list ($ret, $path) = GalleryCoreApi::getPluginParameter('module', 'rewrite',
									'modrewrite.' . $location);
		if ($ret || empty($path)) {
		    /*
		     * We dont know where we're at. This could happen if rewrite was installed
		     * in G2 standalone, and now is accessed as G2 embedded. Turn off short URLs
		     * for the embedded mode and wait until the user has set it up corectly.
		     */
		    $this->_error = true;
		    return parent::getCurrentUrl($forceDirect);
		}
	    }

	    $tmp = $path . $this->_file[$forceDirect];
	    $queryString = GalleryUtilities::getServerVar('QUERY_STRING');
	    if (!empty($queryString)) {
		$queryString = ModRewriteUrlGenerator::_sanitizeRequestUri($queryString);
		$tmp .= ((strpos($tmp, '?') === false) ? '?' : '&') . $queryString;
	    }

	    $this->_currentUrl[$forceDirect] = $this->makeUrl($tmp);
	}

	return $this->_currentUrl[$forceDirect];
    }

    /**
     * @see GalleryUrlGenerator::generateUrl
     */
    function generateUrl($params=array(), $options=array()) {
	if (GalleryUtilities::isEmbedded()) {
	    $options['forceServerRelativeUrl'] = 1;
	}

	return parent::generateUrl($params, $options);
    }

    /**
     * Sanitize a request URI (REQUEST_URI / QUERY_STRING).
     *
     * Apply URL specific input filering (RFC 1738), thereby removing illegal characters.
     * Note that single quotes and any URL encoded characters are allowed.
     *
     * @param string $uri
     * @return filtered $uri
     */
    function _sanitizeRequestUri($uri) {
	GalleryUtilities::unsanitizeInputValues($uri, false);
	/* Normalize slashes */
	$uri = str_replace('\\', '/', $uri);
	/* Be tolerant: allow for space, single quote and pipe */
	$uri = preg_replace("{[^A-Za-z0-9_\-$./+!*'(),~?&=# %|]}", '', $uri);
	/* Don't allow for games in the path */
	return str_replace('/../', '/', $uri);
    }
}
?>
