<?php
/*
 * $RCSfile: RewriteMap.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.3 $ $Date: 2005/08/23 03:49:53 $
 * @package Rewrite
 * @author Douglas Cau <douglas@cau.se>
 */

/**
 * A map for short URL rules.
 *
 * @g2 <class-name>RewriteMap</class-name>
 * @g2 <schema>
 * @g2   <schema-major>1</schema-major>
 * @g2   <schema-minor>0</schema-minor>
 * @g2 </schema>
 *
 * @package Rewrite
 * @subpackage Classes
 */
class RewriteMap_core{

    /**
     * @g2 <map>
     * @g2   <member>
     * @g2     <member-name>pattern</member-name>
     * @g2     <member-type>STRING</member-type>
     * @g2     <member-size>LARGE</member-size>
     * @g2     <primary/>
     * @g2   </member>
     * @g2   <member>
     * @g2     <member-name>module</member-name>
     * @g2     <member-type>STRING</member-type>
     * @g2     <member-size>SMALL</member-size>
     * @g2     <required/>
     * @g2   </member>
     * @g2   <member>
     * @g2     <member-name>ruleId</member-name>
     * @g2     <member-type>INTEGER</member-type>
     * @g2     <required/>
     * @g2   </member>
     * @g2   <member>
     * @g2     <member-name>match</member-name>
     * @g2     <member-type>STRING</member-type>
     * @g2     <member-size>MEDIUM</member-size>
     * @g2   </member>
     * @g2 </map>
     */

    /**
     * Saves active short URL rules.
     *
     * @param array of active rules
     * @return object GalleryStatus a status code
     */
    function setActiveRules($activeRules) {
    	RewriteMap::removeAllMapEntries();

    	foreach (array_keys($activeRules) as $moduleId) {
	    foreach (array_keys($activeRules[$moduleId]) as $ruleId) {
		$ret = RewriteMap::addMapEntry(array('module' => $moduleId,
			'ruleId' => $ruleId,
			'pattern' => $activeRules[$moduleId][$ruleId]['pattern'],
			'match' => (isset($activeRules[$moduleId][$ruleId]['match']))
				? $activeRules[$moduleId][$ruleId]['match'] : ''));
		if ($ret->isError()) {
		    return $ret->wrap(__FILE__, __LINE__);
		}
	    }
    	}

	return GalleryStatus::success();
    }

    /**
     * Returns active short URL rules.
     *
     * @return array object GalleryStatus a status code
     *               array of active rules
     */
    function getActiveRules() {
    	global $gallery;

    	$query = '
    	SELECT
    	  [RewriteMap::module], [RewriteMap::ruleId], [RewriteMap::pattern], [RewriteMap::match]
    	FROM
    	  [RewriteMap]
    	ORDER BY
    	  [RewriteMap::module] ASC, [RewriteMap::ruleId] ASC
    	';

	list ($ret, $searchResults) = $gallery->search($query);
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

    	$activeRules = array();
    	while ($result = $searchResults->nextResult()) {
    	    $activeRules[$result[0]][$result[1]]['pattern'] = $result[2];

    	    if (!empty($result[3])) {
		$activeRules[$result[0]][$result[1]]['match'] = $result[3];
    	    }
    	}

	return array(GalleryStatus::success(), $activeRules);
    }

    /**
     * Returns array of short URL patterns for the UrlGenerator to use.
     *
     * @return array object GalleryStatus a status code
     *               array of match => pattern
     */
    function getShortUrls() {
    	global $gallery;

    	$query = "
    	SELECT
    	  [RewriteMap::match], [RewriteMap::pattern]
    	FROM
    	  [RewriteMap]
    	WHERE
    	  [RewriteMap::match] != ''
    	";

	list ($ret, $searchResults) = $gallery->search($query);
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

    	$shortUrls = array();
    	while ($result = $searchResults->nextResult()) {
    	    $shortUrls[$result[0]] = $result[1];
    	}

    	return array(GalleryStatus::success(), $shortUrls);
    }
}

include(dirname(__FILE__) . '/interfaces/RewriteMap.inc');
?>
