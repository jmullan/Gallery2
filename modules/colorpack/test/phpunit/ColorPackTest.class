<?php
/*
 * $RCSfile: ColorPackTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.2 $ $Date: 2005/08/23 03:49:01 $
 * @package ColorPack
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * Test ColorPackInterface functionality
 *
 * @package ColorPack
 * @subpackage PHPUnit
 */
class ColorPackTest extends GalleryTestCase {

    function ColorPackTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
	parent::setUp();

	list ($ret, $this->_colorpack) =
	    GalleryCoreApi::newFactoryInstance('ColorPackInterface_1_0', 'ColorPackImpl');
	if ($ret->isError()) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	if (!isset($this->_colorpack)) {
	    print 'Missing ColorPackImpl';
	    return $this->failWithStatus(
		GalleryStatus::error(ERROR_MISSING_OBJECT, __FILE__, __LINE__));
	}
    }

    function testColorPackList() {
	list ($ret, $list) = $this->_colorpack->getColorPacks();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assert(isset($list['']) && isset($list['blue']), 'Should have "" and "blue" keys');
    }

    function testColorPackSelect() {
	$template = new ColorPackDummyGalleryTemplate();
	$ret = $this->_colorpack->selectColorPack($template, 'blue');
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals(array('modules/colorpack/packs/blue/color.css'), $template->style);
    }
}

/**
 * @package ColorPack
 * @subpackage PHPUnit
 */
class ColorPackDummyGalleryTemplate {
    var $style = array();
    function style($tpl) {
	$this->style[] = $tpl;
    }
}
?>
