<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2007 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * PanoramaSiteAdmin controller tests
 *
 * @package Panorama
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 * @version $Revision$
 */
class PanoramaSiteAdminControllerTest extends GalleryControllerTestCase {

    function PanoramaSiteAdminControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'panorama.PanoramaSiteAdmin');
    }

    function setUp() {
	parent::setUp();

	$ret = $this->_markPluginParametersForCleanup('module', 'panorama');
	if ($ret) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret);
	}
    }

    function testPanoramaSiteAdminControllerUndo() {
	GalleryUtilities::putRequestVariable('form[action][undo]', '1');

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'panorama.PanoramaSiteAdmin'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testPanoramaSiteAdminControllerSave() {
	GalleryUtilities::putRequestVariable('form[itemLink]', '1');
	GalleryUtilities::putRequestVariable('form[width]', '1000');
	GalleryUtilities::putRequestVariable('form[action][save]', '1');

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'panorama.PanoramaSiteAdmin'),
				  'status' => array('saved' => 1),
				  'error' => array()),
			    $results);
    }

    function testPanoramaSiteAdminControllerSaveNoWidth() {

	GalleryUtilities::putRequestVariable('form[itemType]', '1');
	GalleryUtilities::putRequestVariable('form[action][save]', '1');

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'core.SiteAdmin',
						      'subView' => 'panorama.PanoramaSiteAdmin'),
				  'status' => array(),
				  'error' => array('form[error][width]')),
			    $results);
    }

    function testPanoramaSiteAdminControllerSaveBadWidth() {

	GalleryUtilities::putRequestVariable('form[width]', 'abc5000');
	GalleryUtilities::putRequestVariable('form[action][save]', '1');

	$results = $this->handleRequest();
	$this->assertEquals(array('delegate' => array('view' => 'core.SiteAdmin',
						      'subView' => 'panorama.PanoramaSiteAdmin'),
				  'status' => array(),
				  'error' => array('form[error][width]')),
			    $results);
    }
}
?>
