<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2003 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package Selfregistration
 * @author Sebastian Eichner <mailsp@sebastian-eichner.de>
 */

/**
 * A helper class for GalleryPendingUsers
 *
 * Utility functions useful in managing GalleryPendingUsers
 *
 * @package Selfregistration
 * @subpackage Helpers
 */
class GalleryPendingUserHelper_medium {
	
    /*
     * ****************************************
     *                 Methods
     * ****************************************
     */


    /**
     * Return the GalleryPendingUser specified by the username
     *
     * @param string the username
     * @return array object GalleryStatus a status code
     *               object GalleryUser a user
     * @static
     */
    function fetchPendingUserByUserName($userName=null) {
		global $gallery;
	
	        $query = '
	        SELECT
	          [GalleryPendingUser::id]
	        FROM
	          [GalleryPendingUser]
	        WHERE
	          [GalleryPendingUser::userName] = ?
	        ';
		list ($ret, $searchResults) = $gallery->search($query, array($userName));
		if ($ret->isError()) {
		    return array($ret->wrap(__FILE__, __LINE__), null);
		}
	
		if ($searchResults->resultCount() == 0) {
		    return array(GalleryStatus::error(ERROR_MISSING_OBJECT, __FILE__, __LINE__), null);
		} else {
		    $result = $searchResults->nextResult();
		    $id = $result[0];
		    list ($ret, $user) = GalleryCoreApi::loadEntitiesById($id);
		    if ($ret->isError()) {
			return array($ret->wrap(__FILE__, __LINE__), null);
		    }
	
		    return array(GalleryStatus::success(), $user);
		}
    }
    
 
}
    
?>