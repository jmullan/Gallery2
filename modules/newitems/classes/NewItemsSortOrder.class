<?php
/*
 * $RCSfile: NewItemsSortOrder.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.6 $ $Date: 2005/08/23 03:49:47 $
 * @package NewItems
 * @author Alan Harder <alan.harder@sun.com>
 */

GalleryCoreApi::relativeRequireOnce('modules/core/classes/GallerySortInterface_1_1.class');

/**
 * Sort with new items shown first, followed by other items sorted by view count.
 *
 * @package NewItems
 * @subpackage Classes
 */
class NewItemsSortOrder extends GallerySortInterface_1_1 {

    /**
     * @see GallerySortInterface_1_1::getSortInfo
     */
    function getSortInfo() {
	list ($ret, $module) = GalleryCoreApi::loadPlugin('module', 'newitems');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null, null);
	}

	return array(GalleryStatus::success(), $module->translate('New Items First'), true);
    }

    /**
     * @see GallerySortInterface_1_1::getSortOrder
     */
    function getSortOrder($direction) {
	global $gallery;
	$storage =& $gallery->getStorage();

	list ($ret, $newTime) = GalleryCoreApi::getPluginParameter('module', 'newitems', 'days.new');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null, null, null, null);
	}
	$newTime = time() - $newTime * 86400;
	list ($ret, $case) = $storage->getFunctionSql('CASE',
	    array("[GalleryEntity::creationTimestamp] > $newTime", '0', '1'));
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null, null, null, null);
	}

	return array(GalleryStatus::success(), '%1%', $case,
		     '[GalleryEntity::id] = [GalleryChildEntity::id]', null);
    }
}
?>
