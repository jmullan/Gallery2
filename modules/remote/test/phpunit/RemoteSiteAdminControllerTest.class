<?php
/*
 * $RCSfile: RemoteSiteAdminControllerTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.6 $ $Date: 2005/08/23 03:49:52 $
 * @package Remote
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * RemoteSiteAdmin controller tests
 *
 * @package Remote
 * @subpackage PHPUnit
 */
class RemoteSiteAdminControllerTest extends GalleryControllerTestCase {

    function RemoteSiteAdminControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'remote.RemoteSiteAdmin');
    }

    function setUp() {
	parent::setUp();

	$ret = $this->_markPluginParametersForCleanup('module', 'remote');
	if ($ret->isError()) {
		print $ret->getAsHtml();
		return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
    }

    function testRemoteSiteAdminControllerReset() {
	GalleryUtilities::putRequestVariable('form[action][reset]', '1');

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'remote.RemoteSiteAdmin'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testRemoteSiteAdminControllerSave() {
	GalleryUtilities::putRequestVariable('form[showItemAdd]', '1');
	GalleryUtilities::putRequestVariable('form[action][save]', '1');

	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'remote.RemoteSiteAdmin'),
				  'status' => array('saved' => 1),
				  'error' => array()),
			    $results);

	foreach (array('showItemAdd' => '1') as $key => $expectedValue) {
	    list ($ret, $value) = GalleryCoreApi::getPluginParameter('module', 'remote', $key);
	    if ($ret->isError()) {
		return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	    }
	    $this->assertEquals($expectedValue, $value, $key);
	}
    }
}
?>
