<?php
/*
 * $RCSfile: MimeAdminControllerTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * @version $Revision: 1.6 $ $Date: 2005/08/26 19:14:22 $
 * @package Mime
 * @subpackage PHPUnit
 * @author Felix Rabinovich <felix@rabinovich.org>
 */
class MimeAdminControllerTest extends GalleryControllerTestCase {

    function MimeAdminControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'mime.MimeAdmin');
    }

    function setUp() {
	parent::setUp();

	$ret = GalleryCoreApi::addMimeType('xxx', 'test/test', false);
	if ($ret->isError()) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
    }

    function tearDown() {
	$ret = GalleryCoreApi::removeMimeType(array('mimeType' => 'test/test'));
	if ($ret->isError()) {
	    $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}

	parent::tearDown();
    }

    function testDelete() {
	GalleryUtilities::putRequestVariable('form[action][delete]', 'test/test');
	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.SiteAdmin',
						      'subView' => 'mime.MimeAdmin'),
				  'status' => array('deleted' => 'test/test'),
				  'error' => array()),
			    $results, 'Delete');
	list ($ret, $extensions) = GalleryCoreApi::convertMimeToExtensions('test/test');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}
	$this->assertEquals(array(), $extensions, 'Delete results');
    }
}
?>
