<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package Captcha
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */
GalleryCoreApi::relativeRequireOnce('modules/core/classes/GalleryPhpVm.class');
GalleryCoreApi::relativeRequireOnce('modules/captcha/classes/CaptchaHelper.class');

/**
 * Test Captcha Helper
 *
 * @package Captcha
 * @subpackage PHPUnit
 */
class CaptchaHelperTest extends GalleryTestCase {
    function CaptchaHelperTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function testTestRequiredGdFunctionsAllPresent() {
	$phpVm = new CaptchaHelperTestPhpVm();
	$phpVm->setFunctionExists('ImageCreateFromJPEG', true);
	$phpVm->setFunctionExists('ImageColorAllocate', true);
	$phpVm->setFunctionExists('ImageString', true);
	$phpVm->setFunctionExists('ImageJPEG', true);
	$phpVm->setFunctionExists('ImageDestroy', true);
	$phpVm->setFunctionExists('imagesx', true);
	$report = CaptchaHelper::testRequiredGdFunctions($phpVm);
	$this->assertEquals(array('success' => array('ImageCreateFromJPEG',
						     'ImageColorAllocate',
						     'ImageString',
						     'ImageJPEG',
						     'ImageDestroy',
						     'imagesx'),
				  'fail' => array()),
			    $report);
    }

    function testTestRequiredGdFunctionsSomeMissing() {
	$phpVm = new CaptchaHelperTestPhpVm();
	$phpVm->setFunctionExists('ImageCreateFromJPEG', true);
	$phpVm->setFunctionExists('ImageColorAllocate', true);
	$phpVm->setFunctionExists('ImageString', false);
	$phpVm->setFunctionExists('ImageJPEG', true);
	$phpVm->setFunctionExists('ImageDestroy', true);
	$phpVm->setFunctionExists('imagesx', false);
	$report = CaptchaHelper::testRequiredGdFunctions($phpVm);
	$this->assertEquals(array('success' => array('ImageCreateFromJPEG',
						     'ImageColorAllocate',
						     'ImageJPEG',
						     'ImageDestroy'),
				  'fail' => array('ImageString',
						  'imagesx')),
			    $report);
    }
    
    function testTestRequiredGdFunctionsAllMissing() {
	$phpVm = new CaptchaHelperTestPhpVm();
	$phpVm->setFunctionExists('ImageCreateFromJPEG', false);
	$phpVm->setFunctionExists('ImageColorAllocate', false);
	$phpVm->setFunctionExists('ImageString', false);
	$phpVm->setFunctionExists('ImageJPEG', false);
	$phpVm->setFunctionExists('ImageDestroy', false);
	$phpVm->setFunctionExists('imagesx', false);
	$report = CaptchaHelper::testRequiredGdFunctions($phpVm);
	$this->assertEquals(array('success' => array(),
				  'fail' => array('ImageCreateFromJPEG',
						  'ImageColorAllocate',
						  'ImageString',
						  'ImageJPEG',
						  'ImageDestroy',
						  'imagesx')),
			    $report);
    }

}

class CaptchaHelperTestPhpVm extends GalleryPhpVm {
    function setFunctionExists($functionName, $bool) {
	$this->_function_exists[$functionName] = $bool;
    }

    function function_exists($functionName) {
	return $this->_function_exists[$functionName];
    }
}
