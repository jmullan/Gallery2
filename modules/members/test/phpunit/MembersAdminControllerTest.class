<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2004 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package Members
 * @subpackage PHPUnit
 * @author Robert Balousek <rbalousek@hotmail.com>
 */

/**
 * MembersAdmin controller tests
 *
 * @package Members
 * @subpackage PHPUnit
 */
class MembersAdminControllerTest extends GalleryControllerTestCase {

    function MembersAdminControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'members:AdminMembers');
    }

    function setUp() {
	parent::setUp();

	list ($ret, $this->_param) = GalleryCoreApi::fetchAllPluginParameters('module', 'members');
	if ($ret->isError()) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
    }

    function tearDown() {
	$ret = array();
	foreach ($this->_param as $key => $value) {
	    $ret[] = GalleryCoreApi::setPluginParameter('module', 'members', $key, $value);
	}
	foreach ($ret as $return) {
	    if ($return->isError()) {
		print $return->getAsHtml();
		return $this->failWithStatus($return->wrap(__FILE__, __LINE__));
	    }
	}
	parent::tearDown();
    }

    function testMembersAdminControllerReset() {

	GalleryUtilities::putRequestVariable('form[action][reset]', '1');

	/* Perform the request and verify that we succeeded */
	$results = $this->handleRequest();
	$this->assertEquals(array('return' => 1,
				  'redirect' => array('view' => 'core:SiteAdmin',
						      'subView' => 'members:AdminMembers'),
				  'status' => array(),
				  'error' => array()),
			    $results);
    }

    function testUserAlbumSiteAdminControllerSave() {

	GalleryUtilities::putRequestVariable('form[action][save]', '1');
	GalleryUtilities::putRequestVariable('form[canViewMembersModule]', '2');
	GalleryUtilities::putRequestVariable('form[canViewEmailAddress]', '0');

	/* Perform the request and verify that we succeeded */
	$results = $this->handleRequest();
	$this->assertEquals(array('return' => 1,
				  'redirect' => array('view' => 'core:SiteAdmin',
						      'subView' => 'members:AdminMembers'),
				  'status' => array('saved' => 1),
				  'error' => array()),
			    $results);
    }
}
?>
