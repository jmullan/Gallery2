<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2006 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

GalleryCoreApi::requireOnce('lib/tools/phpunit/ItemAddOptionTestCase.class');

/**
 * MP3AudioOption tests
 * @package MP3Audio
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 * @version $Revision$ $Date$
 */
class MP3AudioOptionTest extends ItemAddOptionTestCase {

    function MP3AudioOptionTest($methodName) {
	$this->ItemAddOptionTestCase($methodName, 'mp3audio', 'MP3AudioOption');
    }

    function setUp() {
	parent::setUp();

	list ($ret, $this->_album) = $this->_createRandomAlbum($this->_getRootId());
	if ($ret) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret);
	}
	$this->_markForCleanup($this->_album);

	$this->_items = array();
	list ($ret, $this->_items[0]) = $this->_createRandomDataItem(
		$this->_album->getId(), 'audio/wav');
	if ($ret) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret);
	}
	list ($ret, $this->_items[1]) = $this->_createRandomDataItem(
		$this->_album->getId(), 'audio/mpeg');
	if ($ret) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret);
	}

	$this->_noWarnings = array();
	$this->_noErrors = array();
    }

    function testAddItems() {
	$result = $this->_handleRequestAfterAdd(array(), $this->_items);
	$this->assertEquals(array($this->_noErrors, $this->_noWarnings), $result);

	list ($ret, $item) = $this->_items[0]->refresh();
	if ($ret) {
	    return $this->failWithStatus($ret);
	}
	/* For Oracle, null is replaced with '' when loading data from the database */
	$this->assert(in_array($item->getRenderer(), array(null, '')), 'wav renderer');

	list ($ret, $item) = $this->_items[1]->refresh();
	if ($ret) {
	    return $this->failWithStatus($ret);
	}
	$this->assertEquals('MP3AudioRenderer', $item->getRenderer(), 'mp3 renderer');
    }
}
?>
