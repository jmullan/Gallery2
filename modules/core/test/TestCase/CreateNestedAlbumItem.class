<?php

class CreateNestedAlbumItemTestCase extends TestCase {

    function getDescription() {
	return "Create several nested album items";
    }

    function testStart() {
	global $gallery;

	print("Creating new root album item\n");
	$rootAlbum = new AlbumItem();
	$ret = $rootAlbum->createRoot("nestedRoot",
				      $gallery->getActiveUserId());
	if ($ret->isError()) {
	    return $ret;
	}

	$ret = $rootAlbum->save();
	if ($ret->isError()) {
	    return $ret;
	}

	$ret = $gallery->lockWorld();
	if ($ret->isError()) {
	    return $ret;
	}

	$parent =& $rootAlbum;
	for ($i = 0; $i < 5; $i++) {
	    $nested[$i] = new AlbumItem();
	    $ret = $nested[$i]->create($parent, "nested_$i",
				       $gallery->getActiveUserId());
	    if ($ret->isError()) {
		return $ret;
	    }
	    
	    $ret = $nested[$i]->save();
	    if ($ret->isError()) {
		return $ret;
	    }

	    $parent =& $nested[$i];
	}

	/* Leggo of our locks */
	$ret = $gallery->unlock();
	if ($ret->isError()) {
	    return $ret;
	}
	
	return GalleryStatus::success();
    }
}

?>
</pre>
