<?php

/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage TestCase
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * @package GalleryCore
 * @subpackage TestCase
 */
class CreateModifyAndDeleteUserTestCase extends TestCase {

    function getDescription() {
	return "Create the ModifyAndDelete user";
    }

    function getIterations() {
	return array(1, 50, 500, 1000, 10000);
    }

    function testStart($iterations) {
	global $gallery;

	for ($i = 0; $i < $iterations; $i++) {
	    list ($ret, $user) = GalleryFactory::newInstance('GalleryEntity', 'GalleryUser');
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }

	    $rand = rand(1, 1000000);
	    $ret = $user->create('random_' . $rand);
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	    $user->setFullName('Random ' . $rand);
	
	    $ret = $user->save();
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }

	    list ($ret, $lockId) = $gallery->acquireWriteLock($user->getId());
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }

	    $user->setFullName('Modified ' . $rand);
	    $ret = $user->save();
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }

	    $ret = $user->delete();
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }

	    $ret = $gallery->releaseLocks($lockId);
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	}

	return GalleryStatus::success();
    }
}

?>
