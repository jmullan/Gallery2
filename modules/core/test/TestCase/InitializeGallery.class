<?php

class InitializeGalleryTestCase extends TestCase {

    function getDescription() {
	return "Create a new Gallery directory structure.";
    }

    function testStart() {
	global $gallery;

	list($ret, $platform) = $gallery->getPlatform();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$retArray = array();
	$retArray[] = $gallery->setModuleParameter('core', 'permissions.directory', '755');
	$retArray[] = $gallery->setModuleParameter('core', 'permissions.file', '644');
	$retArray[] = $gallery->setModuleParameter('core', 'exec.expectedStatus', 0);
	$retArray[] = $gallery->setModuleParameter('core', 'default.orderBy', 'id');
	$retArray[] = $gallery->setModuleParameter('core', 'default.orderDirection', 1);
	$retArray[] = $gallery->setModuleParameter('core', 'default.layout', 'classic');
	$retArray[] = $gallery->setModuleParameter('core', 'default.theme', 'classic');
	$retArray[] = $gallery->setModuleParameter('core', 'default.language', 'en_US');
	$retArray[] = $gallery->setModuleParameter('core', 'graphics.type', 'netpbm');

	foreach ($retArray as $ret) {
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	}
	
	foreach (array('data.gallery.albums',
		       'data.gallery.cache',
		       'data.gallery.tmp',
		       'data.smarty.base',
		       'data.smarty.templates_c') as $key) {
	    $dir = $gallery->getConfig($key);

	    if (empty($dir)) {
		return GalleryStatus::error(ERROR_BAD_PATH, __FILE__, __LINE__);
	    }

	    if (!$platform->file_exists($dir)) {
		$ret = $platform->mkdir($dir);
		if (!$ret) {
		    return GalleryStatus::error(ERROR_UNKNOWN, __FILE__, __LINE__);
		}
	    }
	}

	return GalleryStatus::success();
    }
}
?>
