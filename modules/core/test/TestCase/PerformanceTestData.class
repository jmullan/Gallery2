<?php
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage TestCase
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * @package GalleryCore
 * @subpackage TestCase
 */
class PerformanceTestDataTestCase extends TestCase {

    function getDescription() {
	return 'Reset G2 and create a data set for load testing';
    }

    function getDependencies() {
	global $gallery;
	
	$dependencies = array(array('moduleId' => 'core',
				    'testName' => 'ReInitializeGallery'));
	return $dependencies;
    }

    function testStart() {
	global $gallery;
	
	list ($ret, $rootId) = $gallery->getModuleParameter('core', 'id.rootAlbum');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	list ($ret, $album) = GalleryFactory::newInstance('GalleryEntity', 'GalleryAlbumItem');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	if (!isset($album)) {
	    return GalleryStatus::error(ERROR_MISSING_OBJECT, __FILE__, __LINE__);
	}

	list ($ret, $lockIds[]) = $gallery->acquireReadLock($rootId);
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	$ret = $album->create($rootId, 'PerformanceTest');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	/* Change some settings */
	$album->setTitle('Performance Test Album');
	$album->setDescription('This album contains a known set of data for performance testing');

	/* Save it */
	$ret = $album->save();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	/* Leggo of our locks */
	if (isset($lockIds)) {
	    $ret = $gallery->releaseLocks($lockIds);
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	    unset($lockIds);
	}

	list ($ret, $lockIds[]) = $gallery->acquireWriteLock($album->getId());
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	$imageFile = dirname(__FILE__) . '/../../../migrate/test/data/albums/album03/chipper.jpg';
	$mimeType = 'image/jpeg';
	for ($i = 0; $i < 27; $i++) {
	    list ($ret, $item) =
		GalleryItemHelper::addItemToAlbum($imageFile,
						  "image-$i",
						  "test image $i",
						  "summary for test image $i",
						  "description for test image $i",
						  $mimeType,
						  $album->getId());
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	}

	/* Leggo of our locks */
	if (isset($lockIds)) {
	    $ret = $gallery->releaseLocks($lockIds);
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	}

	return GalleryStatus::success();
    }
}

?>
