<?php

class CreateGroupAndUsersTestCase extends TestCase {

    function getDescription() {
	return "Create new Group and Users, test adding and removing Users from Groups";
    }

    function testStart() {
	global $gallery;

	$ret = $gallery->lockWorld();
	if ($ret->isError()) {
	    return $ret;
	}

	$group = new GalleryGroup();
	$ret = $group->create();
	if ($ret->isError()) {
	    return $ret;
	}
	$group->setName('Group 1');

	$user1 = new GalleryUser();
	$ret = $user1->create();
	if ($ret->isError()) {
	    return $ret;
	}
	$user1->setFullName('User 1');
	$user1->changePassword('password');
	$user1->setEmail('User1@gallery.com');
	$user1->setIsAdmin(false);
	
	$user2 = new GalleryUser();
	$ret = $user2->create();
	if ($ret->isError()) {
	    return $ret;
	}
	$user2->setFullName('User 2');
	$user2->changePassword('password');
	$user2->setEmail('User2@gallery.com');
	$user2->setIsAdmin(false);

	$ret = $gallery->commitCache();
	if ($ret->isError()) {
	    return $ret;
	}

	print "<h2>ADD USERS TO GROUP!</h2>";
	$ret = $group->addUser($user1->getId());
	if ($ret->isError()) {
	    return $ret;
	}

	$ret = $group->addUser($user2->getId());
	if ($ret->isError()) {
	    return $ret;
	}

	$ret = $gallery->commitCache();
	if ($ret->isError()) {
	    return $ret;
	}

	print "<h2>REMOVE!</h2>";
	list ($ret, $user1) = $gallery->loadNucleusById($user1->getId());
	if ($ret->isError()) {
	    return $ret;
	}
	
	$ret = $user1->removeFromGroup($group->getId());
	if ($ret->isError()) {
	    return $ret;
	}

	$ret = $gallery->commitCache();
	if ($ret->isError()) {
	    return $ret;
	}
	
	/* Leggo of our locks */
	$ret = $gallery->unlock();
	if ($ret->isError()) {
	    return $ret;
	}
	
	return GalleryStatus::success();
    }
}

?>
</pre>
