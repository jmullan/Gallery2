<?php

/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage TestCase
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * @package GalleryCore
 * @subpackage TestCase
 */
class CreateGroupAndUsersTestCase extends TestCase {

    function getDescription() {
	return "Create new Group and Users, test adding and removing Users from Groups";
    }

    function testStart() {
	global $gallery;

	list ($ret, $group) = GalleryFactory::newInstance('GalleryEntity', 'GalleryGroup');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$ret = $group->create('Group 1');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	$ret = $group->save();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	list ($ret, $user1) = GalleryFactory::newInstance('GalleryEntity', 'GalleryUser');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$ret = $user1->create('user1');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$user1->setFullName('User 1');
	$user1->changePassword('password');
	$user1->setEmail('User1@gallery.com');
	$ret = $user1->save();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	list ($ret, $user2) = GalleryFactory::newInstance('GalleryEntity', 'GalleryUser');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$ret = $user2->create('user2');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	$user2->setFullName('User 2');
	$user2->changePassword('password');
	$user2->setEmail('User2@gallery.com');
	$ret = $user2->save();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$gallery->debug("<h2>ADD USERS TO GROUP!</h2>");
	$ret = GalleryUserGroupMap::addUserToGroup($user1->getId(),
						   $group->getId());
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$ret = GalleryUserGroupMap::addUserToGroup($user2->getId(),
						   $group->getId());
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$gallery->debug("<h2>REMOVE!</h2>");
	$ret = GalleryUserGroupMap::removeUserFromGroup($user1->getId(),
							$group->getId());
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	return GalleryStatus::success();
    }
}

?>

