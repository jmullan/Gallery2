<?php

class CreateAndDeleteAlbumItemTestCase extends TestCase {

    function getIterations() {
	return array(10, 50);
    }

    function getDescription() {
	return "Create a new AlbumItem and then delete it";
    }

    function testStart($iterations) {

	for ($i = 0; $i < $iterations; $i++) {
	    $ret = $this->_createAndDeleteAlbumItem();
	    if ($ret->isError()) {
		return $ret->wrap(__FILE__, __LINE__);
	    }
	}

	return GalleryStatus::success();
    }
    
    function _createAndDeleteAlbumItem() {
	global $gallery;

	$gallery->debug("Creating new album item\n");
	list ($ret, $album) = GalleryFactory::newInstance('GalleryEntity', 'GalleryAlbumItem');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	$ret = $album->createRoot("createAndDelete",
				  $gallery->getActiveUserId());
	
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	/* Change some settings */
	$album->setTitle('This is my title');
	$album->setDescription('This is a description');

	/* Add some properties */
	$ret = GalleryItemPropertiesMap::addProperty($album->getId(), 'banana', 'orange');
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	$ret = GalleryItemPropertiesMap::addProperty($album->getId(), 'look at me', serialize($this));
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	$ret = GalleryItemPropertiesMap::addProperty($album->getId(), 'password', md5('banana'));
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	$gallery->debug("SAVE\n");
	$ret = $album->save();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	/* We need a lock to delete the album */
	list ($ret, $lockId) = $gallery->acquireWriteLock($album->getId());
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	
	$gallery->debug("DELETE\n");
	$ret = $album->delete();
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	/* Drop the lock */
	$ret = $gallery->releaseLocks($lockId);
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	return GalleryStatus::success();
    }
}

?>
