<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * Test UrlGenerator functionality
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 *
 */
class UrlGeneratorTest extends GalleryTestCase {
    var $_urlGenerator;
    var $_savedGet;

    function UrlGeneratorTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
	parent::setUp();
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php?foo=bar';
	$_SERVER['HTTP_HOST'] = 'example.com';
	$_SERVER['SERVER_PORT'] = 80;

	/* PHP/CGI sets PATH_INFO, but we don't want that for our tests */
	unset($_SERVER['PATH_INFO']);

	global $gallery;
	$this->_savedSession = $gallery->_session;

	$this->_urlGenerator = new GalleryUrlGenerator();
	$this->_urlGenerator->init('phpunit_test.php');
    }

    function tearDown() {
	global $gallery;
	$gallery->_session = $this->_savedSession;

	parent::tearDown();
    }

    function testGenerateUrl() {
	global $gallery;

	$params['a'] = 123;
	$params['b'] = 'bBbB';
	$params['c'] = serialize(array(1, 2, 3));
	$params['d'] = array('<', 2);
	$actual = $this->_urlGenerator->generateUrl($params);

	$values[] = GalleryUtilities::prefixFormVariable('a') . '=' . urlencode('123');
	$values[] = GalleryUtilities::prefixFormVariable('b') . '=' . urlencode('bBbB');
	$values[] = GalleryUtilities::prefixFormVariable('c') . '=' .
	    urlencode(serialize(array(1, 2, 3)));
	$values[] = GalleryUtilities::prefixFormVariable('d[0]') . '=' . urlencode('<');
	$values[] = GalleryUtilities::prefixFormVariable('d[1]') . '=' . urlencode('2');

	/* If we're not using cookies, expect there to be an additional value */
	$session =& $gallery->getSession();
	if (!$session->isUsingCookies()) {
	    $values[] = GalleryUtilities::prefixFormVariable($session->getKey()) .
		'=' . urlencode($session->getId());
	}
	$expected = 'http://example.com/gallery2/phpunit_test.php?' . join('&amp;', $values);

	$this->assertEquals($expected, $actual);

	/* Simulate embbeded with full url as embedUri */
	$_SERVER['REQUEST_URI'] = '/cms/otherpage?foo=bar';
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('http://example.com/cms/phpunit_test.php?module=gallery2',
			    null, '../gallery2/');

	$this->assertEquals('http://example.com/cms/phpunit_test.php?module=gallery2&amp;' .
	    join('&amp;', $values), $urlGenerator->generateUrl($params),
	    'embedded');

	/* Simulate embedded, the "old" way, parsing the url for baseFile */
	$_SERVER['REQUEST_URI'] = '/cms/phpunit_test.php?module=gallery2&foo=bar';
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2', null, '../gallery2/');

	$this->assertEquals('http://example.com/cms/phpunit_test.php?module=gallery2&amp;' .
	    join('&amp;', $values), $urlGenerator->generateUrl($params),
	    'embedded');

	/* Simulate embedded, the "new" way, defining the uri path explicitely */
	$_SERVER['REQUEST_URI'] = '/cms/phpunit_test.php?module=gallery2&foo=bar';
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2', '/cms', '../gallery2/');

	$this->assertEquals('http://example.com/cms/phpunit_test.php?module=gallery2&amp;' .
	    join('&amp;', $values), $urlGenerator->generateUrl($params),
	    'embedded');

	/* Simulate cookieless embedded */
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2',
			    null, '../gallery2/', 'CMSSID=123456');

	$this->assertEquals('http://example.com/cms/phpunit_test.php?module=gallery2&amp;' .
	    join('&amp;', $values) . '&amp;CMSSID=123456',
	    $urlGenerator->generateUrl($params, true),
	    'cookieless embedded');

	$this->assertEquals('http://example.com/gallery2/main.php?g2_view=' .
	    urlencode('core.DownloadItem') . '&amp;g2_itemId=12345&amp;' .
	    GalleryUtilities::prefixFormVariable($session->getKey()) . '=' .
	    urlencode($session->getId()),
	    $urlGenerator->generateUrl(array('view' => 'core.DownloadItem', 'itemId' => 12345),
				       true),
	    'core.DownloadItem always direct-g2 url, even when embedded');
    }

    function testGenerateUrlWithNoSession() {
	global $gallery;
	$gallery->_session = null;

	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php');

	$this->assertEquals('http://example.com/gallery2/phpunit_test.php?g2_view=foo',
			    $urlGenerator->generateUrl(array('view' => 'foo')));
    }

    function testGenerateHref() {
	global $gallery;
	$session =& $gallery->getSession();
	$qs = $session->isUsingCookies() ? '' : '?' .
	    GalleryUtilities::prefixFormVariable($session->getKey()) . '=' . $session->getId();

	$this->assertEquals('http://example.com/gallery2/test/test.css' . $qs,
			    $this->_urlGenerator->generateUrl(array('href' => 'test/test.css')),
			    'relative');

	/* Absolute URL, defaults to no sessionid */
	$this->assertEquals('http://sf.net/',
			    $this->_urlGenerator->generateUrl(array('href' => 'http://sf.net/')),
			    'absolute');

	/* Simulate embedded */
	$_SERVER['REQUEST_URI'] = '/cms/phpunit_test.php?module=gallery2&foo=bar';
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2', null, '../gallery2/');

	$this->assertEquals('http://example.com/gallery2/test/test.css' . $qs,
			    $urlGenerator->generateUrl(array('href' => 'test/test.css')),
			    'relative embedded');

	/* Embedded, trailing slash omitted */
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2', null, '../gallery2');

	$this->assertEquals('http://example.com/gallery2/test/test.css' . $qs,
			    $urlGenerator->generateUrl(array('href' => 'test/test.css')),
			    'relative embedded, no trailing slash');
    }

    function testGenerateReturnUrl() {
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php?' .
	    GalleryUtilities::prefixFormVariable('view') . '=foo&' .
	    GalleryUtilities::prefixFormVariable('a') . '=123';
	$_GET[GalleryUtilities::prefixFormVariable('view')] = 'foo';
	$_GET[GalleryUtilities::prefixFormVariable('a')] = '123';

	$params['a+'] = 456;
	$params['view'] = 'bar';
	$params['return'] = 1;
	$actual = $this->_urlGenerator->generateUrl($params, false);

	$params['return'] = $this->_urlGenerator->getCurrentUrl();
	foreach ($params as $key => $value) {
	    $values[] = GalleryUtilities::prefixFormVariable(urlencode($key))
		      . '=' . urlencode($value);
	}
	$expected = 'http://example.com/gallery2/phpunit_test.php?' . implode('&amp;', $values);
	/*
	 * Note: encoded 'return' url should separate request variables with '%26'
	 * and not '%26amp%3D' because sending this back to G2 would yield &amp;amp;
	 */

	$this->assertEquals($expected, $actual);
    }

    function testGenerateUrlWithEmbeddedSessionId() {
	global $gallery;

	$params['a'] = 123;
	$params['b'] = 'bBbB';
	$params['c'] = serialize(array(1, 2, 3));
	$actual = $this->_urlGenerator->generateUrl($params, true);

	foreach ($params as $key => $value) {
	    $values[] = GalleryUtilities::prefixFormVariable($key) . '=' . urlencode($value);
	}

	/* No matter what, expect the session id */
	$session =& $gallery->getSession();
	$values[] = GalleryUtilities::prefixFormVariable($session->getKey()) .
	    '=' . urlencode($session->getId());
	$expected = 'http://example.com/gallery2/phpunit_test.php?' . join('&amp;', $values);
	$this->assertEquals($expected, $actual);
    }

    function testGenerateUrlWithoutEmbeddedSessionId() {
	$params['a'] = 123;
	$params['b'] = 'bBbB';
	$params['c'] = serialize(array(1, 2, 3));
	$actual = $this->_urlGenerator->generateUrl($params, false);

	foreach ($params as $key => $value) {
	    $values[] = GalleryUtilities::prefixFormVariable($key) . '=' . urlencode($value);
	}

	/* No matter what, expect no session id */
	$expected = 'http://example.com/gallery2/phpunit_test.php?' . join('&amp;', $values);
	$this->assertEquals($expected, $actual);
    }

    function testGetCurrentRequestUri() {
	$expected = '/gallery2/phpunit_test.php?foo=bar';
	$this->assertEquals($expected, $this->_urlGenerator->getCurrentRequestUri());

	/* IIS.. no REQUEST_URI; has SCRIPT_NAME.. */
	unset($_SERVER['REQUEST_URI']);
	$_SERVER['SCRIPT_NAME'] = '/gallery2/phpunit_test.php';
	$_SERVER['QUERY_STRING'] = 'foo=bar';
	$this->assertEquals($expected, $this->_urlGenerator->getCurrentRequestUri(), 'iis');

	/* Sometimes IIS has PATH_INFO value the same as SCRIPT_NAME.. */
	$_SERVER['PATH_INFO'] = $_SERVER['SCRIPT_NAME'];
	$this->assertEquals($expected, $this->_urlGenerator->getCurrentRequestUri(),
			    'iis path_info');
    }

    function testGetCurrentUrl() {
	$expected = 'http://example.com/gallery2/phpunit_test.php?foo=bar';
	$this->assertEquals($expected, $this->_urlGenerator->getCurrentUrl());

	/* IIS.. no REQUEST_URI; has SCRIPT_NAME.. */
	unset($_SERVER['REQUEST_URI']);
	$_SERVER['SCRIPT_NAME'] = '/gallery2/phpunit_test.php';
	$_SERVER['QUERY_STRING'] = 'foo=bar';
	unset($this->_urlGenerator->_currentUrl);
	$this->assertEquals($expected, $this->_urlGenerator->getCurrentUrl(), 'iis');

	/* Sometimes IIS has PATH_INFO value the same as SCRIPT_NAME.. */
	$_SERVER['PATH_INFO'] = $_SERVER['SCRIPT_NAME'];
	unset($this->_urlGenerator->_currentUrl);
	$this->assertEquals($expected, $this->_urlGenerator->getCurrentUrl(), 'iis path_info');
    }

    function testGetCurrentUrlDir() {
	$this->assertEquals('http://example.com/gallery2/',
			    $this->_urlGenerator->getCurrentUrlDir());

	/* Simulate embedded.. */
	$_SERVER['REQUEST_URI'] = '/phpunit_test.php?module=gallery2&foo=bar';
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2', null, 'gallery2/');
	$this->assertEquals('http://example.com/', $urlGenerator->getCurrentUrlDir());
	$this->assertEquals('http://example.com/gallery2/', $urlGenerator->getCurrentUrlDir(true));

	$_SERVER['REQUEST_URI'] = '/cms/phpunit_test.php?module=gallery2&foo=bar';
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?module=gallery2', null, '../gallery2/');
	$this->assertEquals('http://example.com/cms/', $urlGenerator->getCurrentUrlDir());
	$this->assertEquals('http://example.com/gallery2/', $urlGenerator->getCurrentUrlDir(true));
    }

    function testGetCurrentDomain() {
	$_SERVER['HTTP_HOST'] = 'http_host';
	$this->assertEquals('http_host', $this->_urlGenerator->getCurrentDomain());

	$_SERVER['HTTP_X_FORWARDED_SERVER'] = 'http_x_forwarded_server';
	$this->assertEquals('http_x_forwarded_server', $this->_urlGenerator->getCurrentDomain());
    }

    /**
     * Basic tests
     */
    function testMakeUrl1() {
	$this->assertEquals('http://example.com/test/path.php',
			    $this->_urlGenerator->makeUrl('/test/path.php'), 'with slash');

	$this->assertEquals('http://example.com/test/test.jpg',
			    $this->_urlGenerator->makeUrl('test/test.jpg'), 'no slash');

	$this->assertEquals('http://example.com/',
			    $this->_urlGenerator->makeUrl(''), 'empty');
    }

    /**
     * Test non-standard ports go in both HTTP_HOST and SERVER_PORT
     */
    function testMakeUrl2() {
	$_SERVER['HTTP_HOST'] = 'example.com:8080';
	$_SERVER['SERVER_PORT'] = 8080;
	$this->assertEquals('http://example.com:8080/test.php?fun=yes',
			    $this->_urlGenerator->makeUrl('/test.php?fun=yes'));
    }

    /**
     * Test browsing to https://example.com
     */
    function testMakeUrl3() {
	$_SERVER['HTTP_HOST'] = 'example.com';
	$_SERVER['SERVER_PORT'] = 443;
	$_SERVER['HTTPS'] = 'on';
	$this->assertEquals('https://example.com/test/go.php?a=one&amp;b=two',
			    $this->_urlGenerator->makeUrl('test/go.php?a=one&amp;b=two'));
    }

    /**
     * Test non-standard port only in SERVER_PORT.  This is the case where the
     * browser went to http://example.com and got internally redirected to
     * something like http://internal.server:82/.  We want to serve up a new
     * url that the browser can handle.
     */
    function testMakeUrl4() {
	$_SERVER['HTTP_HOST'] = 'example.com';
	$_SERVER['SERVER_PORT'] = 82;
	$this->assertEquals('http://example.com/test.php?fun=yes',
			    $this->_urlGenerator->makeUrl('/test.php?fun=yes'));
    }

    function testBaseFileWithQMark() {
	global $gallery;
	$urlGenerator = new GalleryUrlGenerator();
	$urlGenerator->init('phpunit_test.php?test=on');
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php?test=on&foo=bar';

	$params['a'] = 123;
	$params['b'] = 'bBbB';
	$params['c'] = serialize(array(1, 2, 3));
	$actual = $urlGenerator->generateUrl($params);

	foreach ($params as $key => $value) {
	    $values[] = GalleryUtilities::prefixFormVariable($key) . '=' . urlencode($value);
	}

	/* If we're not using cookies, expect there to be an additional value */
	$session =& $gallery->getSession();
	if (!$session->isUsingCookies()) {
	    $values[] = GalleryUtilities::prefixFormVariable($session->getKey()) .
		'=' . urlencode($session->getId());
	}
	$expected = 'http://example.com/gallery2/phpunit_test.php?test=on&amp;' .
	    implode('&amp;', $values);

	$this->assertEquals($expected, $actual);
    }

    function testGetNavigationReturnUrl() {
	$_GET['g2_foo'] = 'bar';
	$_GET['g2_return'] = 'http://blabla';
	$_GET['g2_returnName'] = 'name';
	$_GET['g2_navId'] = 'navId';
	$_GET['g2_fromNavId'] = 'fromNavId';
	$expected = 'http://example.com/gallery2/phpunit_test.php?g2_foo=bar';

	/* Normal behaviour (php+apache) */
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl());

	/* IIS: no REQUEST_URI or PATH_INFO, just SCRIPT_NAME */
	unset($_SERVER['REQUEST_URI']);
	$_SERVER['SCRIPT_NAME'] = '/gallery2/phpunit_test.php';
	unset($this->_urlGenerator->_currentUrl);
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl(), 'iis');

	/* Sometimes IIS has PATH_INFO value the same as SCRIPT_NAME.. */
	$_SERVER['PATH_INFO'] = $_SERVER['SCRIPT_NAME'];
	unset($this->_urlGenerator->_currentUrl);
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl(),
			    'iis path_info');
    }

    function testGetNavigationReturnUrlNoCookies() {
	global $gallery;

	/* Session without cookies */
	$session =& $gallery->getSession();
	$savedIsUsingCookies = $session->_isUsingCookies;
	$session->_isUsingCookies = false;

	/* No other params in URL */
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php';
	$_GET = array();
	$expected = 'http://example.com/gallery2/phpunit_test.php?' .
	    GalleryUtilities::prefixFormVariable($session->getKey()) . '=' . $session->getId();
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl());

	/* With other params in URL */
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php?foo=bar';
	$_GET['g2_foo'] = 'bar';
	unset($this->_urlGenerator->_currentUrl);
	$expected = 'http://example.com/gallery2/phpunit_test.php?g2_foo=bar&amp;' .
	    GalleryUtilities::prefixFormVariable($session->getKey()) . '=' . $session->getId();
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl());

	/* With session already in URL */
	$_GET[GalleryUtilities::prefixFormVariable($session->getKey())] = $session->getId();
	unset($this->_urlGenerator->_currentUrl);
	$expected = 'http://example.com/gallery2/phpunit_test.php?g2_foo=bar&amp;' .
	    GalleryUtilities::prefixFormVariable($session->getKey()) . '=' . $session->getId();
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl());

	$session->_isUsingCookies = $savedIsUsingCookies;
    }

    function testGetNavigationReturnUrlArrayParam() {
	$_GET['g2_foo'] = array('test' => 'bar');
	$_GET['g2_form'] = array('one' => array('two' => array('three' => 'four')));
	$expected = 'http://example.com/gallery2/phpunit_test.php?g2_foo[test]=bar&amp;'
		  . 'g2_form[one][two][three]=four';
	$this->assertEquals($expected, $this->_urlGenerator->getNavigationReturnUrl());
    }

    function testRelativeUrlOverrides() {
	global $gallery;
	$session =& $gallery->getSession();

	$gallery->setPlatform(new UrlGeneratorTestPlatform());
	$qs = $session->isUsingCookies() ? '' : '?' .
	    GalleryUtilities::prefixFormVariable($session->getKey()) . '=' .
	    urlencode($session->getId());

	/* Try with a file that has no local override */
	$params['href'] = 'test/test1.css';
	$actual = $this->_urlGenerator->generateUrl($params);
	$this->assertEquals('http://example.com/gallery2/test/test1.css' . $qs, $actual);

	/* Try with a file that has a local override */
	$params['href'] = 'test/test2.css';
	$actual = $this->_urlGenerator->generateUrl($params);
	$this->assertEquals('http://example.com/gallery2/test/local/test2.css' . $qs, $actual);
    }

    function testCurrentUrlToken() {
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php?a=b';

	$url = $this->_urlGenerator->generateUrl(array('view' => 'foo', 'test' => '%CURRENT_URL%'));
	$this->assertEquals('http://example.com/gallery2/phpunit_test.php?g2_view=foo&amp;' .
			    'g2_test=http%3A%2F%2Fexample.com%2Fgallery2%2Fphpunit_test.php%3Fa%3Db',
			    $url);
    }
}

class UrlGeneratorTestPlatform extends GalleryPlatform {

    function file_exists($filename) {
	$basedir = realpath(dirname(__FILE__) . '/../../classes');
	switch($filename) {
	case "$basedir/../../../test/local/test1.css":
	    return false;

	case "$basedir/../../../test/local/test2.css":
	    return true;

	default:
	    print "Unexpected file_exists($filename) call";
	    return false;
	}
    }
}
?>
