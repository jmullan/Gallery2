<?php
/*
 * $RCSfile: MainTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.14 $ $Date: 2005/08/23 03:49:33 $
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * Test main.php
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 *
 */
class MainTest extends GalleryTestCase {

    function MainTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
	parent::setUp();

	$this->_saveGallery = $GLOBALS['gallery'];

	/*
	 * Previously we defined G2_EMBED here to prevent main.php from displaying any content
	 * when it was included.  This caused problems with some tests that varied their behavior
	 * based on G2_EMBED.  Now we capture the output and send it to /dev/null via output
	 * buffering.  G2_EMBED is not required for testEmbedOnly().
	 */
	ob_start();
	GalleryCoreApi::relativeRequireOnce('main.php');
	ob_end_clean();

	GalleryUtilities::putRequestVariable('view', 'maintest.FooView');
	$_SERVER['REQUEST_URI'] = '/gallery2/phpunit_test.php';
	$_SERVER['HTTP_HOST'] = 'example.com';
	$_SERVER['SERVER_PORT'] = 80;
	$this->_urlGenerator = new GalleryUrlGenerator();
	$this->_urlGenerator->init('phpunit_test.php');
	$GLOBALS['gallery']->setUrlGenerator($this->_urlGenerator);
	$GLOBALS['gallery']->_session = new GallerySession();
    }

    function tearDown() {
	$GLOBALS['gallery'] = $this->_saveGallery;

	parent::tearDown();
    }

    function testEmbedOnly() {
	global $gallery;
	$gallery->setConfig('mode.embed.only', true);

	list($ret, $g2Data) = _GalleryMain(false);
	$this->assertEquals(GALLERY_ERROR | ERROR_PERMISSION_DENIED, $ret->getErrorCode());
    }

    /* Test that we only append the GALLERYSID to Location URLs if really needed */
    function testDoRedirectIisBugFix() {
	global $gallery;

	/* Prepare test cases */
	
	/* IIS servers with a version < 6 are affected */
	$buggyWebServers = array('Microsoft-IIS/3.0', 'Microsoft-IIS/4.0', 'Microsoft-IIS/5.0',
				 'Microsoft-IIS/3.5', 'Microsoft-IIS/5.1', ' Microsoft-IIS/5.2 ');
	/* All other webservers should be ignored */
	$goodWebServers = array('', 'Apache/2.0.52 (Gentoo/Linux) PHP/4.4.0', 'Apache/1.3.33',
				'Apache/2.0.52 No Microsoft-IIS/5.0', null, 'Zeus' );

	/* Controllers that shouldn't trigger the fix, just a few samples */
	$okControllers = array('core.ItemAdd', 'migrate.Redirect', null, 'core.ItemMove');
	/* Controllers that should trigger the fix */
	$needFixControllers = array('core.Logout', 'core.UserLogin', 'publishxp.Login');
	
	
	$base = 'http://www.example.com/';
	$session =& $gallery->getSession();
	$ret = $session->init();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$sessionId = $session->getId();
	$sessionKey = $session->getKey();
	$this->assert(!empty($sessionId) && !empty($sessionKey),
		      'initial session assertion failed');
	$sessionParamString =
	    GalleryUtilities::prefixFormVariable(urlencode($session->getKey())) . '=' .
	    urlencode($session->getId());
	/* Urls that shouldn't be changed (because they already have the session param) */
	$okUrls = array("main.php?$sessionParamString", 'main.php?g2_view=core.ShowItem&amp;' .
			$sessionParamString . '&amp;g2_navId=x7865x', "?$sessionParamString");
	/* Url that should be changed if the fix is applied */
	$needFixUrls = array('main.php', 'main.php?g2_view=core.ShowItem&amp;g2_navId=x7865x',
			     '?g2_controller=core.ItemEdit&amp;g2_itemId=13&amp;g2_returnUrl=' .
			     urlencode("$base?$sessionParamString"));
	
	/* Run a quite exhaustive series of tests */
	foreach (array_merge($goodWebServers, $buggyWebServers) as $server) {
	    $_SERVER['SERVER_SOFTWARE'] = $server;
	    foreach (array_merge($okControllers, $needFixControllers) as $controller) {
		foreach (array_merge($okUrls, $needFixUrls) as $url) {
		    /* Use the PHP VM to record the headers */
		    $phpVm = new MainTestPhpVm();
		    $gallery->_phpVm = $phpVm;

		    /* Execute the function under test */
		    $this->assertEquals(array('isDone' => true),
					_GalleryMain_doRedirect($base . $url, null, $controller),
					"unexpected return value for $server, $url, $controller");
		    
		    /* Assemble expected result */
		    $expectedUrl = str_replace('&amp;', '&', $base . $url);
		    
		    /* Check if this case needs the bugfix */
		    if (in_array($server, $buggyWebServers) &&
			    in_array($controller, $needFixControllers) &&
			    in_array($url, $needFixUrls)) {
			$expectedUrl .= strpos($expectedUrl, '?') ? '&' : '?';
			$expectedUrl .= $sessionParamString;
		    }
		    
		    /* Verify the result */
		    $headers = $phpVm->headers_sent() ? $_REQUEST['phpVmHeaders'] : array();
		    if (isset($headers['Location'])) {
			$this->assertEquals($expectedUrl, trim($headers['Location']),
					    "wrong header: $server, $url, $controller");
		    } else {
			$this->assert(false, "no headers set for case $server, $url, $controller");
		    }
		}
	    }
	}
    }
}

class MainTestPhpVm extends GalleryPhpVm {
    function header($string, $replace=null) {
	if ($pos = strpos($string, ':')) {
	    $_REQUEST['phpVmHeaders'][substr($string, 0, $pos)] = substr($string, $pos+1);
	}
    }

    function headers_sent() {
	return (isset($_REQUEST['phpVmHeaders']) && !empty($_REQUEST['phpVmHeaders']));
    }
}
?>
