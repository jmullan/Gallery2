<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * Logout controller tests
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class LogoutControllerTest extends GalleryControllerTestCase {

    function LogoutControllerTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'core.Logout');
    }

    function setUp() {
	global $gallery;
	parent::setUp();

	/* Bend the rules */
	$this->_saveSession = $gallery->_session;
	$gallery->_session = new LogoutTestSession($this->_saveSession);
    }

    function tearDown() {
	global $gallery;
	
	/* Restore our session */
	$gallery->_session = $this->_saveSession;
	
	parent::tearDown();
    }

    function testLogout() {
	global $gallery;
	
	$results = $this->handleRequest();
	$this->assertEquals(array('redirect' => array('view' => 'core.ShowItem'),
				  'status' => array(),
				  'error' => array()),
			    $results);
	$this->assertEquals(1, $gallery->_session->getResetCallCount());
    }
}

/**
 * Mock session class
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class LogoutTestSession {
    function LogoutTestSession() {
	$this->_resetCallCount = 0;
    }

    function reset() {
	$this->_resetCallCount++;
	return GalleryStatus::success();
    }

    function isUsingCookies() {
	return true;
    }

    function getResetCallCount() {
	return $this->_resetCallCount;
    }
}
?>
