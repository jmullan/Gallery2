<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */

GalleryCoreApi::relativeRequireOnce(
    'modules/core/classes/GalleryStorage/DatabaseStorageExtras.class');

/**
 * Test Item functionality
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class DatabaseStorageTest extends GalleryTestCase {

    function DatabaseStorageTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
	parent::setUp();
	$this->_data = array('## database_with_everything',
			     '# A_SomeTable_1_0',
			     'Some 0->1 alter SQL',
			     '# A_SomeTable_1_1',
			     'Some 1->2 alter SQL',
			     '# T_AnInstallerTest_1',
			     'Some test SQL',
			     '# T_AnInstallerTest_2',
			     'Some test SQL',
			     '# SomeTable',
			     'Some mysql SQL',
			     'Some multiline SQL',
			     '# R_SomeTable_1_0',
			     'Some mysql drop table SQL',
			     '## database_with_only_tables',
			     '# SomeTable',
			     'Some postgres SQL',
			     '## database_with_only_removes',
			     '# R_SomeTable_1_0',
			     'Some oracle drop table SQL',
			     '## database_with_nothing');
    }

    function testParseSqlTemplate1() {
	$results = DatabaseStorageExtras::parseSqlTemplate($this->_data, 'database_with_everything');
	$this->assertEquals(
	    array('alter' => array(
		      'SomeTable' => array(
			  '1' => array(
			      '0' => 'Some 0->1 alter SQL',
			      '1' => 'Some 1->2 alter SQL'
			      ),
			  ),
		      ),
		  'test' => array(
		      'AnInstallerTest' => array(
			  '1' => 'Some test SQL',
			  '2' => 'Some test SQL'
			  )
		      ),
		  'table' => array(
		      'SomeTable' => "Some mysql SQL\nSome multiline SQL",
		      ),
		  'remove' => array(
		      'SomeTable' => array(
			  '1' => array(
			      '0' => 'Some mysql drop table SQL'
			      )
			  )
		      )
		  ),
	    $results);
    }

    function testParseSqlTemplate2() {
	$results =
	    DatabaseStorageExtras::parseSqlTemplate($this->_data, 'database_with_only_tables');
	$this->assertEquals(
	    array('table' => array(
		      'SomeTable' => 'Some postgres SQL'
		      ),
		  'alter' => array(),
		  'remove' => array(),
		  'test' => array(),
		  ),
	    $results);
    }

    function testParseSqlTemplate3() {
	$results =
	    DatabaseStorageExtras::parseSqlTemplate($this->_data, 'database_with_only_removes');
	$this->assertEquals(
	    array('table' => array(),
		  'alter' => array(),
		  'remove' => array(
		      'SomeTable' => array(
			  '1' => array(
			      '0' =>  'Some oracle drop table SQL'
			      )
			  )
		      ),
		  'test' => array()
		  ),
	    $results);
    }

    function testParseSqlTemplate4() {
	$results = DatabaseStorageExtras::parseSqlTemplate($this->_data, 'database_with_nothing');
	$this->assertEquals(array('table' => array(),
				  'alter' => array(),
				  'remove' => array(),
				  'test' => array()), $results);
    }
}
?>
