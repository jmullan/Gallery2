<?php
/*
 * $RCSfile: ControllerTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.12 $ $Date: 2005/08/23 03:49:33 $
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Ernesto Baschny <ernst@baschny.de>
 */

/**
 * Test GalleryController functionality
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 *
 */
class ControllerTest extends GalleryTestCase {
    function ControllerTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
	parent::setUp();
	GalleryCoreApi::relativeRequireOnce('modules/core/classes/helpers/GalleryPluginHelper_medium.class');
	GalleryPluginHelper_medium::setPluginInstance('module', 'controllertest', new ControllerTestModule());
    }

    function testLoadControllerSuccess() {
	GalleryCoreApi::relativeRequireOnce('modules/core/classes/GalleryController.class');
	list ($ret, $controller) = GalleryController::loadController('core.ItemEdit');
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assert(isset($controller));
    }

    function testLoadControllerFail() {
	GalleryCoreApi::relativeRequireOnce('modules/core/classes/GalleryController.class');
	list ($ret, $controller) =
	    GalleryController::loadController('controllertest.SomeRandomController');
	if ($ret->isError() && $ret->getErrorCode() & ERROR_PERMISSION_DENIED) {
	    // this is what we expect
	} else {
	    $this->assert(false, 'The controller of a deactivated module should not load.');
	}
    }

    function testLoadConfigurationController() {
	/*
	 * We can load the config controller even though the module is deactivated
	 * because we're an admin.
	 */
	list ($ret, $controller) = GalleryController::loadController('controllertest.ConfigView');
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assert(isset($controller));
    }
}

/**
 * Mock GalleryModule
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class ControllerTestModule {
    function isActive() {
	return array(GalleryStatus::success(), false);
    }

    function getConfigurationView() {
	return 'controllertest.ConfigView';
    }
}

/**
 * Mock GalleryController
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class ConfigViewController extends GalleryController { }
?>
