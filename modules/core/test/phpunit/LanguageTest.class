<?php
/*
 * $RCSfile: LanguageTest.class,v $
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */
/**
 * @version $Revision: 1.9 $ $Date: 2005/08/23 03:49:33 $
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Alan Harder <alan.harder@sun.com>
 */

/**
 * Test language selection functionality
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class LanguageTest extends GalleryControllerTestCase {

    function LanguageTest($methodName) {
	$this->GalleryControllerTestCase($methodName, 'core.ChangeLanguage');
    }

    function setUp() {
	global $gallery;
	parent::setUp();
	$session =& $gallery->getSession();
	$this->_sessionLanguage = $session->get('core.language');
	list ($ret, $this->_siteLanguage) =
	    GalleryCoreApi::getPluginParameter('module', 'core', 'default.language');
	if ($ret->isError()) {
	    print $ret->getAsHtml();
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
    }

    function tearDown() {
	global $gallery;
	$gallery->setActiveLanguageCode($this->_sessionLanguage);
	parent::tearDown();
    }

    function testGetActiveLanguageCode() {
	global $gallery;
	$session =& $gallery->getSession();
	$session->remove('core.language');

	list ($ret, $language) = $gallery->getActiveLanguageCode();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals($this->_siteLanguage, $language, 'default language');

	$user = new GalleryUser();
	$user->setId('testId');
	$user->setLanguage('test_language');
	$gallery->setActiveUser($user);

	list ($ret, $language) = $gallery->getActiveLanguageCode();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals('test_language', $language, 'user language');

	$gallery->setActiveLanguageCode('sess_language');

	list ($ret, $language) = $gallery->getActiveLanguageCode();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals('sess_language', $language, 'session language');
    }

    function testChangeLanguageController() {
	global $gallery;
	GalleryUtilities::putRequestVariable('language', 'test_language');

	$results = $this->handleRequest();
	$this->assertEquals(array('return' => 1,
				  'status' => array(),
				  'error' => array()),
			    $results);

	list ($ret, $language) = $gallery->getActiveLanguageCode();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}
	$this->assertEquals('test_language', $language, 'language');
    }
}
?>
