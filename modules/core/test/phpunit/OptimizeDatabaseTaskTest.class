<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2005 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @subpackage PHPUnit
 * @author Bharat Mediratta <bharat@menalto.com>
 */

GalleryCoreApi::relativeRequireOnce('modules/core/classes/OptimizeDatabaseTask.class');

/**
 * Test the OptimizeDatabase maintenance task functionality
 *
 * @package GalleryCore
 * @subpackage PHPUnit
 */
class OptimizeDatabaseTaskTest extends GalleryTestCase {

    function OptimizeDatabaseTaskTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
	global $gallery;

	$this->_task = new OptimizeDatabaseTask();
	parent::setUp();
    }

    function testRun() {
	global $gallery;
	
	$mockStorage = new OptimizeDatabaseTaskTestStorage();
	$gallery->_storage =& $mockStorage;

	list ($ret, $module) = GalleryCoreApi::loadPlugin('module', 'core');
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}

	list ($ret, $success, $details) = $this->_task->run();
	if ($ret->isError()) {
	    return $this->failWithStatus($ret->wrap(__FILE__, __LINE__));
	}

	$this->assert($success);
	$this->assertEquals(array($module->translate('Database optimized successfully')), $details);
	$this->assert($mockStorage->optimizeWasCalled());
    }
}

class OptimizeDatabaseTaskTestStorage {
    function OptimizeDatabaseTaskTestStorage() {
	$this->_optimizeWasCalled = false;
    }
    
    function optimize() {
	$this->_optimizeWasCalled = true;
	return GalleryStatus::success();
    }

    function optimizeWasCalled() {
	return $this->_optimizeWasCalled;
    }
}
?>
