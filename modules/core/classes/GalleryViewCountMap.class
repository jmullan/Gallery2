<?php
/*
 * $RCSfile
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2003 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * Representation of the many-to-many relationship between users and groups
 *
 * @g2 <class-name>GalleryViewCountMap</class-name>
 * @g2 <schema>
 * @g2   <schema-major>1</schema-major>
 * @g2   <schema-minor>0</schema-minor>
 * @g2 </schema>
 *
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @author Bharat Mediratta <bharat@menalto.com>
 */

class GalleryViewCountMap_core {

    /**
     * @g2 <map>
     * @g2   <member>
     * @g2     <member-name>itemId</member-name>
     * @g2     <member-type>INTEGER</member-type>
     * @g2     <member-size>MEDIUM</member-size>
     * @g2     <unique/>
     * @g2   </member>
     * @g2   <member>
     * @g2     <member-name>viewCount</member-name>
     * @g2     <member-type>INTEGER</member-type>
     * @g2     <member-size>LARGE</member-size>
     * @g2   </member>
     * @g2 </map>
     */

    /**
     * Set the view count for a given item
     *
     * @param int the id of the GalleryItem
     * @param integer the new count
     * @return object GalleryStatus a status code
     */
    function setCount($itemId, $count) {
	global $gallery;
	
	if (empty($itemId) || !isset($count)) {
	    return GalleryStatus::error(ERROR_BAD_PARAMETER,
					__FILE__, __LINE__);
	}

	/* Add the view count entry to our map */
	$ret = GalleryViewCountMap::addMapEntry(array('itemId' => $itemId,
						      'viewCount' => $count));
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
						
	return GalleryStatus::success();
    }

    /**
     * Update the view count for a given item
     *
     * @param int the id of the GalleryItem
     * @param integer the new count
     * @return object GalleryStatus a status code
     */
    function updateCount($itemId, $count) {
	global $gallery;
	
	if (empty($itemId) || !isset($count)) {
	    return GalleryStatus::error(ERROR_BAD_PARAMETER,
					__FILE__, __LINE__);
	}

	/* Update the view count entry in our map */
	$ret = GalleryViewCountMap::updateMapEntry(array('itemId' => $itemId),
						   array('viewCount' => $count));
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
						
	return GalleryStatus::success();
    }

    /**
     * Remove the item from our map
     *
     * @param int the id of the GalleryItem
     * @return object GalleryStatus a status code
     */
    function removeCount($itemId) {
	global $gallery;
	if (empty($itemId)) {
	    return GalleryStatus::error(ERROR_BAD_PARAMETER,
					__FILE__, __LINE__);
	}

	/* Remove the item/count from our map */
	$ret = GalleryViewCountMap::removeMapEntry(
	    array('itemId' => $itemId));
	
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}
	return GalleryStatus::success();
    }

    /**
     * Get the view count for the given item
     *
     * @param int the id of the GalleryItem
     * @return array object GalleryStatus a status code
     *               integer a count
     */
    function fetchCount($itemId) {
	global $gallery;

	if (empty($itemId)) {
	    return GalleryStatus::error(ERROR_BAD_PARAMETER,
					__FILE__, __LINE__);
	}

	$query = '
        SELECT
          [GalleryViewCountMap::viewCount]
        FROM
          [GalleryViewCountMap]
        WHERE
          [GalleryViewCountMap::itemId] = ?
        ';

	list ($ret, $searchResults) = $gallery->search($query, array($itemId));
	if ($ret->isError()) {
	    return $ret->wrap(__FILE__, __LINE__);
	}

	if ($searchResults->resultCount() == 0) {
	    $count = 0;
	} else {
	    $result = $searchResults->nextResult();
	    $count = $result[0];
	}
	
	return array(GalleryStatus::success(), $result[0]);
    }
}

include(dirname(__FILE__) . '/interfaces/GalleryViewCountMap.inc');
?>