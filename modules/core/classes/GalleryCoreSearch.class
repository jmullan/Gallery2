<?php
/*
 * $RCSfile
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2003 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * This is an implementation of the search module's SearchInterface_1_0
 */
class GalleryCoreSearch extends GallerySearchInterface_1_0 {

    /**
     * @see GallerySearchInterface_1_0.getSearchModuleInfo()
     */
    function getSearchModuleInfo() {
	global $gallery;

	list ($ret, $module) = $gallery->loadModule('core');
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$info = array('name' => $module->translate('Gallery Core'),
		      'description' => $module->translate('Gallery Core Module'),
		      'options' => array('descriptions' => array('description' => $module->translate('Search descriptions'),
								 'enabled' => 1),
					 'keywords' => array('description' => $module->translate('Search keywords'),
							     'enabled' => 1),
					 'summaries' => array('description' => $module->translate('Search summaries'),
							      'enabled' => 1),
					 'titles' => array('description' => $module->translate('Search titles'),
							   'enabled' => 1)));
	    return array(GalleryStatus::success(), $info);
    }

    /**
     * @see GallerySearchInterface_1_0.search()
     */
    function search($options, $criteria, $limit=null) {
	global $gallery;
	
	foreach (array('descriptions' => '[GalleryItem::description]',
		       'keywords' => '[GalleryItem::keywords]',
		       'summaries' => '[GalleryItem::summary]',
		       'titles' => '[GalleryItem::title]')
		 as $key => $column) {

	    if (isset($options[$key])) {
		$whereList[] = "$column LIKE ?";
		$data[] = '%' . $criteria . '%';
	    }
	}

	$where = '(' . join(' OR ', $whereList) . ')';

	/* Factor in item permissions */
	list ($permissionWhere, $permissionData) =
	    GalleryItemHelper::getViewPermissionClause($gallery->getActiveUserId());
	$where = $where . ' AND ' . $permissionWhere;
	$data = array_merge($data, $permissionData);

	list ($ret, $results) = 
	    $gallery->search(array('select' => 'DISTINCT([GalleryItem::id])',
				   'where' => $where,
				   'order-by' => '[GalleryEntity::modificationTimestamp] DESC',
				   'group-by' => '[GalleryItem::id]',
				   'limit' => array('offset' => 0, 'count' => $limit),
				   'boolean-operator' => 'OR'),
			     $data);
	if ($ret->isError()) {
	    return array($ret->wrap(__FILE__, __LINE__), null);
	}

	$itemIds = array();
	while ($result = $results->nextResult()) {
	    $itemIds[] = $result[0];
	}
	
	return array(GalleryStatus::success(), $itemIds);
    }
}
