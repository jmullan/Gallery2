<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2002 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */

/**
 * Interface class for the GalleryItem class.
 * (Class schema version: 1.0)
 *
 * This file is automatically generated from XML embedded in the
 * class, combined with the ClassCode.xsl file.  You should not modify
 * it by hand, as your changes will be lost next time this file is
 * rebuilt.  If you want to add more getters/setters, you should add
 * them in the core class.  If you want to change the format of this
 * file, then you should edit the XSL template.
 *
 * @version $Id$
 * @package GalleryCoreInterfaces
 * @author Bharat Mediratta <bharat@menalto.com>
 */

class GalleryItem extends GalleryItem_core {
  

  
    /**
     * Return meta information about the members of this class
     *
     * @return array member => array(type, class)
     */
    function getPersistentMemberInfo() {
        $meta = parent::getPersistentMemberInfo();
    
        $meta['members']['description'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_TEXT
        );
    
        $meta['members']['isHtmlAllowed'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_BOOLEAN
        );
    
        $meta['members']['layout'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_STRING
        );
    
        $meta['members']['keywords'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_STRING
        );
    
        $meta['members']['orderBy'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_STRING
        );
    
        $meta['members']['orderDirection'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_STRING
        );
    
        $meta['members']['orderWeight'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_INTEGER
        );
    
        $meta['members']['ownerId'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_INTEGER
        );
    
        $meta['members']['title'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_STRING
        );
    
        $meta['members']['viewedSinceTimestamp'] = array(
            'class' => 'GalleryItem',
            'type' => STORAGE_TYPE_INTEGER
        );
    
        return $meta;
    }

    /**
     * Get the data from this persistent object as an associative array
     *
     * @return array memberName => memberValue
     */
    function getMemberData() {
        $data = parent::getMemberData();
    
        $data['description'] = $this->_description;
    
        $data['isHtmlAllowed'] = $this->_isHtmlAllowed;
    
        $data['layout'] = $this->_layout;
    
        $data['keywords'] = $this->_keywords;
    
        $data['orderBy'] = $this->_orderBy;
    
        $data['orderDirection'] = $this->_orderDirection;
    
        $data['orderWeight'] = $this->_orderWeight;
    
        $data['ownerId'] = $this->_ownerId;
    
        $data['title'] = $this->_title;
    
        $data['viewedSinceTimestamp'] = $this->_viewedSinceTimestamp;
    
        return $data;
    }
  
    /**
     * Get the value of description
     *
     * @return TEXT the value
     */
    function getdescription() {
        if (!isset($this->_description)) {
            return null;
        }
        return $this->_description;
    }

    /**
     * Set the value of description
     *
     * @param TEXT the value
     */
    function setdescription($value) {
    
        $this->_description = $value;
        $this->setModifiedFlag('description', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of isHtmlAllowed
     *
     * @return BOOLEAN the value
     */
    function getisHtmlAllowed() {
        if (!isset($this->_isHtmlAllowed)) {
            return null;
        }
        return $this->_isHtmlAllowed;
    }

    /**
     * Set the value of isHtmlAllowed
     *
     * @param BOOLEAN the value
     */
    function setisHtmlAllowed($value) {
    
        $value = (bool)$value;
      
        $this->_isHtmlAllowed = $value;
        $this->setModifiedFlag('isHtmlAllowed', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of layout
     *
     * @return STRING the value
     */
    function getlayout() {
        if (!isset($this->_layout)) {
            return null;
        }
        return $this->_layout;
    }

    /**
     * Set the value of layout
     *
     * @param STRING the value
     */
    function setlayout($value) {
    
        $this->_layout = $value;
        $this->setModifiedFlag('layout', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of keywords
     *
     * @return STRING the value
     */
    function getkeywords() {
        if (!isset($this->_keywords)) {
            return null;
        }
        return $this->_keywords;
    }

    /**
     * Set the value of keywords
     *
     * @param STRING the value
     */
    function setkeywords($value) {
    
        $this->_keywords = $value;
        $this->setModifiedFlag('keywords', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of orderBy
     *
     * @return STRING the value
     */
    function getorderBy() {
        if (!isset($this->_orderBy)) {
            return null;
        }
        return $this->_orderBy;
    }

    /**
     * Set the value of orderBy
     *
     * @param STRING the value
     */
    function setorderBy($value) {
    
        $this->_orderBy = $value;
        $this->setModifiedFlag('orderBy', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of orderDirection
     *
     * @return STRING the value
     */
    function getorderDirection() {
        if (!isset($this->_orderDirection)) {
            return null;
        }
        return $this->_orderDirection;
    }

    /**
     * Set the value of orderDirection
     *
     * @param STRING the value
     */
    function setorderDirection($value) {
    
        $this->_orderDirection = $value;
        $this->setModifiedFlag('orderDirection', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of orderWeight
     *
     * @return INTEGER the value
     */
    function getorderWeight() {
        if (!isset($this->_orderWeight)) {
            return null;
        }
        return $this->_orderWeight;
    }

    /**
     * Set the value of orderWeight
     *
     * @param INTEGER the value
     */
    function setorderWeight($value) {
    
        $value = (int)$value;
      
        $this->_orderWeight = $value;
        $this->setModifiedFlag('orderWeight', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of ownerId
     *
     * @return INTEGER the value
     */
    function getownerId() {
        if (!isset($this->_ownerId)) {
            return null;
        }
        return $this->_ownerId;
    }

    /**
     * Set the value of ownerId
     *
     * @param INTEGER the value
     */
    function setownerId($value) {
    
        $value = (int)$value;
      
        $this->_ownerId = $value;
        $this->setModifiedFlag('ownerId', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of title
     *
     * @return STRING the value
     */
    function gettitle() {
        if (!isset($this->_title)) {
            return null;
        }
        return $this->_title;
    }

    /**
     * Set the value of title
     *
     * @param STRING the value
     */
    function settitle($value) {
    
        $this->_title = $value;
        $this->setModifiedFlag('title', MEMBER_MODIFIED);
    }
  
    /**
     * Get the value of viewedSinceTimestamp
     *
     * @return INTEGER the value
     */
    function getviewedSinceTimestamp() {
        if (!isset($this->_viewedSinceTimestamp)) {
            return null;
        }
        return $this->_viewedSinceTimestamp;
    }

    /**
     * Set the value of viewedSinceTimestamp
     *
     * @param INTEGER the value
     */
    function setviewedSinceTimestamp($value) {
    
        $value = (int)$value;
      
        $this->_viewedSinceTimestamp = $value;
        $this->setModifiedFlag('viewedSinceTimestamp', MEMBER_MODIFIED);
    }
  
}
?>