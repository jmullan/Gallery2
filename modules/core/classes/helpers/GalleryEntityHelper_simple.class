<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2003 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * Helper class for GalleryEntities
 *
 * @package GalleryCore
 * @subpackage Helpers
 * @abstract
 */
class GalleryEntityHelper_simple {

    /**
     * Load the GalleryEntities with the ids specified
     *
     * @param mixed the ids (or id) of the GalleryEntities to load
     * @return array object GalleryStatus a status code,
     *               mixed one GalleryEntity or an array of GalleryEntities
     * @static
     */
    function loadEntitiesById($ids) {
	global $gallery;
	
	$gallery->guaranteeTimeLimit(5);
	    
	if (empty($ids)) {
	    return array(GalleryStatus::error(ERROR_BAD_PARAMETER, __FILE__, __LINE__), null);
	}

	if (is_array($ids)) {
	    $returnArray = true;
	} else {
	    $returnArray = false;
	    $ids = array($ids);
	}

	/* Grab what we can from the cache and make up a list of what's missing */
	$cached = array();
	$missing = array();
	foreach ($ids as $id) {
	    if (GalleryDataCache::containsKey("GalleryEntityHelper::loadEntitiesById($id)")) {
		$cached[$id] = GalleryDataCache::get("GalleryEntityHelper::loadEntitiesById($id)");
	    } else {
		$missing[] = $id;
	    }
	}

	if (!empty($missing)) {
	    /* Get our storage object */
	    $storage = $gallery->getStorage();
	    
	    /* Load the entities from our persistent store */
	    list ($ret, $missing) = $storage->loadEntities($missing);
	    if ($ret->isError()) {
		return array($ret->wrap(__FILE__, __LINE__), null);
	    }
	}

	/* Move the new entities into the cache */
	foreach ($missing as $entity) {
	    $id = $entity->getId();
	    GalleryDataCache::put("GalleryEntityHelper::loadEntitiesById($id)", $entity);
	    $cached[$id] = $entity;
	}

	/* Build up the results from the cache */
	$results = array();
	foreach ($ids as $id) {
	    $results[] = $cached[$id];
	}
	
	if (!$returnArray) {
	    $results = $results[0];
	}

	return array(GalleryStatus::success(), $results);
    }
}
?>