<?php
/*
 * $RCSfile$
 *
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2003 Bharat Mediratta
 * 
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
/**
 * @version $Revision$ $Date$
 * @package GalleryCore
 * @author Bharat Mediratta <bharat@menalto.com>
 */

/**
 * Theme handling class. It provides functions to create an user-interface 
 * based on a customizable theme.
 *
 * @package GalleryCore
 * @subpackage Classes
 */
class GalleryTheme {

    
    /*
     * ****************************************
     *                 Members
     * ****************************************
     */

    /**
     * The theme directory
     *
     * @var string $_baseDir;
     * @access private
     */
    var $_baseDir;

    /**
     * The theme url
     *
     * @var string $_baseUrl;
     * @access private
     */
    var $_baseUrl;

    /*
     * ****************************************
     *                 Methods
     * ****************************************
     */

    /**
     * Constructor
     *
     * @param string the path to the theme directory
     */
    function GalleryTheme($themeDir) {
	$this->_baseDir = $themeDir;
	$this->_baseUrl = GalleryUtilities::convertPathToUrl($themeDir) . '/';
    }

    /**
     * Get the theme url.
     * @return string the theme url
     */
    function getBaseUrl() {
	return $this->_baseUrl;
    }

    /**
     * Get the theme directory.
     * @return string the theme directory
     */
    function getBaseDir() {
	return $this->_baseDir;
    }

    /**
     * Get an array of available theme-names
     *
     * @static
     * @return array string name of the themes
     */
     function getThemeList() {
	global $gallery;

	$platform = $gallery->getPlatform();
	$themeList = array();
	$themeDir = dirname(__FILE__) . '/../../../themes/';
	if ($dir = $platform->opendir($themeDir)) {
	    while (($subdir = $platform->readdir($dir)) !== false) {
		if ($subdir{0} == '.' || $subdir == 'CVS') {
		    continue;
		}

		if ($platform->is_dir("$themeDir$subdir")) {
		    $file = "$themeDir$subdir/theme.inc";
		    if ($platform->file_exists($file)) {
			$themeList[$subdir] = $subdir;
		    }
		}
	    }
	    $platform->closedir($dir);
	}
	return $themeList;
    }

    /**
     * Initialize this instance to use the theme specified.
     *
     * @param themeName the name of a theme in the themes directory.
     * @return array object GalleryStatus a status code
     *               object a GalleryTheme instance
     */
    function loadTheme($themeName=null) {
	global $gallery;

	/* If we don't have a theme name then use the default theme. */
	if (empty($themeName)) {
	    list ($ret, $themeName) =
		GalleryCoreApi::getPluginParameter('module', 'core', 'default.theme');
	    if ($ret->isError()) {
		return array($ret->wrap(__FILE__, __LINE__), null);
	    }
	}

	$platform = $gallery->getPlatform();
	GalleryCoreApi::relativeRequireOnce('themes/' . $themeName . '/theme.inc');

	/* Expect the theme class name to be the same as the theme name plus "Theme" */
	$themeClassName = $themeName . 'Theme';
	if (!class_exists($themeClassName)) {
	    return array(GalleryStatus::error(ERROR_BAD_PARAMETER, __FILE__, __LINE__,
					      "Theme $themeName must have a class named '$themeClassName'"),
			 null);
	}
	
	$theme = new $themeClassName();
	if (!GalleryUtilities::isA($theme, 'GalleryTheme')) {
	    return array(GalleryStatus::error(ERROR_BAD_PARAMETER, __FILE__, __LINE__,
					      "Theme $themeName is not an instance of GalleryTheme"), null);
	}

	return array(GalleryStatus::success(), $theme);
    }
}
?>
