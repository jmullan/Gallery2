<?php
/*
 * Gallery - a web based photo album viewer and editor
 * Copyright (C) 2000-2006 Bharat Mediratta
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or (at
 * your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA  02110-1301, USA.
 */

/**
 * Error event listener tests.
 * @package HttpAuth
 * @subpackage PHPUnit
 * @author Jack Bates <ms419@freezone.co.uk>
 * @version $Revision$ $Date$
 */
class HttpAuthErrorEventListenerTest extends GalleryTestCase {

    function HttpAuthErrorEventListenerTest($methodName) {
	$this->GalleryTestCase($methodName);
    }

    function setUp() {
        global $gallery;
        parent::setUp();

        /* Require here to avoid loading if none of our tests will be run */
        GalleryCoreApi::requireOnce('modules/core/ErrorPage.inc');

        /* Save Gallery global, use HttpAuthErrorEventListenerTestPhpVm */
        $this->_saveGallery = $gallery;
        $gallery->_phpVm = new HttpAuthErrorEventListenerTestPhpVm();

        /* Clear response headers */
        $headers =& GalleryUtilities::_getResponseHeaders();
        $headers = array();
    }

    function tearDown() {
        global $gallery;
        $gallery = $this->_saveGallery;

        parent::tearDown();
    }

    function testPermissionDenied() {
        /* Perform the request and verify that we succeeded */
        ob_start();
        ErrorPageView::errorHandler(GalleryCoreApi::error(ERROR_PERMISSION_DENIED));
        $output = ob_get_contents();
        ob_end_clean();

        list ($ret, $authName) = GalleryCoreApi::getPluginParameter('module', 'httpauth', 'authName');
        if ($ret) {
            return $this->failWithStatus($ret);
        }

        $this->assertEquals(array('status' => 'HTTP/1.0 401 Authorization Required',
        	'www-authenticate' => "WWW-Authenticate: Basic realm='$authName'"),
            GalleryUtilities::_getResponseHeaders());

        $this->assertEquals('', $output);
    }
}

class HttpAuthErrorEventListenerTestPhpVm extends GalleryPhpVm {

    function header($header, $replace=null) {
	/* Avoid modifying actual header information */
    }
}
?>
